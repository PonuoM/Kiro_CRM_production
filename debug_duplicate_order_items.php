<?php
/**
 * Debug Duplicate Order Items
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á order_items ‡∏ã‡πâ‡∏≥
 */

header('Content-Type: text/html; charset=utf-8');
require_once 'config/database.php';

echo "<h2>üêõ Debug Duplicate Order Items</h2>";

try {
    $db = Database::getInstance();
    $pdo = $db->getConnection();
    
    echo "<h3>1Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Order Items ‡∏ã‡πâ‡∏≥</h3>";
    
    // ‡∏´‡∏≤ DocumentNo ‡∏ó‡∏µ‡πà‡∏°‡∏µ order_items ‡πÄ‡∏Å‡∏¥‡∏ô 2 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö order ‡∏ó‡∏µ‡πà‡∏°‡∏µ 2 ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤)
    $stmt = $pdo->query("
        SELECT 
            DocumentNo,
            COUNT(*) as item_count,
            GROUP_CONCAT(CONCAT(ProductCode, ':', ProductName, ':', Quantity, ':', UnitPrice) SEPARATOR ' | ') as items_summary
        FROM order_items 
        GROUP BY DocumentNo
        HAVING COUNT(*) > 2
        ORDER BY MAX(CreatedDate) DESC
        LIMIT 10
    ");
    
    $duplicateOrders = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    if (empty($duplicateOrders)) {
        echo "<p style='color: green;'>‚úÖ ‡πÑ‡∏°‡πà‡∏û‡∏ö order_items ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥</p>";
        
        // ‡πÅ‡∏™‡∏î‡∏á orders ‡∏õ‡∏Å‡∏ï‡∏¥
        $stmt = $pdo->query("
            SELECT 
                DocumentNo,
                COUNT(*) as item_count,
                GROUP_CONCAT(CONCAT(ProductCode, ':', ProductName) SEPARATOR ' | ') as items_summary,
                MAX(CreatedDate) as latest_date
            FROM order_items 
            GROUP BY DocumentNo
            ORDER BY MAX(CreatedDate) DESC
            LIMIT 5
        ");
        
        $normalOrders = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        echo "<h4>Orders ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (‡∏õ‡∏Å‡∏ï‡∏¥):</h4>";
        echo "<table border='1' style='border-collapse: collapse;'>";
        echo "<tr><th>DocumentNo</th><th>Item Count</th><th>Items</th><th>Date</th></tr>";
        
        foreach ($normalOrders as $order) {
            echo "<tr>";
            echo "<td>{$order['DocumentNo']}</td>";
            echo "<td>{$order['item_count']}</td>";
            echo "<td style='font-size: 12px;'>{$order['items_summary']}</td>";
            echo "<td>{$order['latest_date']}</td>";
            echo "</tr>";
        }
        echo "</table>";
        
    } else {
        echo "<p style='color: red;'>‚ùå ‡∏û‡∏ö order_items ‡∏ã‡πâ‡∏≥ {" . count($duplicateOrders) . "} orders</p>";
        
        echo "<table border='1' style='border-collapse: collapse;'>";
        echo "<tr><th>DocumentNo</th><th>Item Count</th><th>Items Summary</th></tr>";
        
        foreach ($duplicateOrders as $order) {
            echo "<tr>";
            echo "<td style='color: red;'><strong>{$order['DocumentNo']}</strong></td>";
            echo "<td style='color: red;'><strong>{$order['item_count']}</strong></td>";
            echo "<td style='font-size: 11px;'>{$order['items_summary']}</td>";
            echo "</tr>";
        }
        echo "</table>";
        
        // ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á order ‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤
        $firstDuplicateDoc = $duplicateOrders[0]['DocumentNo'];
        
        echo "<h4>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î order_items ‡∏Ç‡∏≠‡∏á {$firstDuplicateDoc}:</h4>";
        $stmt = $pdo->prepare("
            SELECT id, DocumentNo, ProductCode, ProductName, UnitPrice, Quantity, LineTotal, CreatedDate, CreatedBy
            FROM order_items 
            WHERE DocumentNo = ?
            ORDER BY CreatedDate, id
        ");
        $stmt->execute([$firstDuplicateDoc]);
        $items = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        echo "<table border='1' style='border-collapse: collapse;'>";
        echo "<tr><th>ID</th><th>ProductCode</th><th>ProductName</th><th>Price</th><th>Qty</th><th>Total</th><th>CreatedDate</th><th>CreatedBy</th><th>Status</th></tr>";
        
        $groupedItems = [];
        foreach ($items as $item) {
            $key = $item['ProductCode'] . '|' . $item['ProductName'] . '|' . $item['UnitPrice'] . '|' . $item['Quantity'];
            if (!isset($groupedItems[$key])) {
                $groupedItems[$key] = [];
            }
            $groupedItems[$key][] = $item;
        }
        
        foreach ($items as $item) {
            $key = $item['ProductCode'] . '|' . $item['ProductName'] . '|' . $item['UnitPrice'] . '|' . $item['Quantity'];
            $isDuplicate = count($groupedItems[$key]) > 1;
            
            echo "<tr" . ($isDuplicate ? " style='background-color: #ffcccc;'" : "") . ">";
            echo "<td>{$item['id']}</td>";
            echo "<td>{$item['ProductCode']}</td>";
            echo "<td>{$item['ProductName']}</td>";
            echo "<td>" . number_format($item['UnitPrice'], 2) . "</td>";
            echo "<td>{$item['Quantity']}</td>";
            echo "<td>" . number_format($item['LineTotal'], 2) . "</td>";
            echo "<td>{$item['CreatedDate']}</td>";
            echo "<td>{$item['CreatedBy']}</td>";
            echo "<td>" . ($isDuplicate ? "<span style='color: red;'>üîÑ DUPLICATE</span>" : "‚úÖ OK") . "</td>";
            echo "</tr>";
        }
        echo "</table>";
    }
    
    echo "<h3>2Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å createOrderItems</h3>";
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö error log
    echo "<h4>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö PHP Error Log:</h4>";
    $errorLogPath = ini_get('error_log');
    if (empty($errorLogPath)) {
        $errorLogPath = '/var/log/apache2/error.log'; // Default path
    }
    
    echo "<p><strong>Error Log Path:</strong> {$errorLogPath}</p>";
    
    // ‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á order ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    echo "<h4>Orders ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÅ‡∏•‡∏∞ order_items ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á:</h4>";
    $stmt = $pdo->query("
        SELECT 
            o.DocumentNo,
            o.CustomerCode,
            o.SubtotalAmount,
            o.Subtotal_amount2,
            o.CreatedDate as OrderCreated,
            COUNT(oi.id) as ItemCount,
            SUM(oi.LineTotal) as ItemsTotal,
            MIN(oi.CreatedDate) as FirstItemCreated,
            MAX(oi.CreatedDate) as LastItemCreated,
            TIMESTAMPDIFF(SECOND, MIN(oi.CreatedDate), MAX(oi.CreatedDate)) as TimeSpanSeconds
        FROM orders o
        LEFT JOIN order_items oi ON o.DocumentNo = oi.DocumentNo
        WHERE o.CreatedDate >= DATE_SUB(NOW(), INTERVAL 1 HOUR)
        GROUP BY o.DocumentNo
        ORDER BY o.CreatedDate DESC
        LIMIT 10
    ");
    
    $recentOrders = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    echo "<table border='1' style='border-collapse: collapse;'>";
    echo "<tr><th>DocumentNo</th><th>Customer</th><th>Order Created</th><th>Item Count</th><th>First Item</th><th>Last Item</th><th>Time Span</th><th>Status</th></tr>";
    
    foreach ($recentOrders as $order) {
        $timeSpan = $order['TimeSpanSeconds'] ?? 0;
        $isDuplicate = $order['ItemCount'] > 2; // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤ order ‡∏õ‡∏Å‡∏ï‡∏¥‡∏°‡∏µ 2 items
        $hasTimeGap = $timeSpan > 1; // ‡∏ñ‡πâ‡∏≤‡∏´‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ = ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á
        
        echo "<tr" . ($isDuplicate ? " style='background-color: #ffcccc;'" : "") . ">";
        echo "<td>{$order['DocumentNo']}</td>";
        echo "<td>{$order['CustomerCode']}</td>";
        echo "<td>{$order['OrderCreated']}</td>";
        echo "<td" . ($isDuplicate ? " style='color: red; font-weight: bold;'" : "") . ">{$order['ItemCount']}</td>";
        echo "<td>{$order['FirstItemCreated']}</td>";
        echo "<td>{$order['LastItemCreated']}</td>";
        echo "<td" . ($hasTimeGap ? " style='color: orange;'" : "") . ">{$timeSpan}s</td>";
        
        if ($isDuplicate && $hasTimeGap) {
            echo "<td style='color: red;'>üö® Multiple calls</td>";
        } elseif ($isDuplicate) {
            echo "<td style='color: orange;'>‚ö†Ô∏è Same time duplicate</td>";
        } else {
            echo "<td style='color: green;'>‚úÖ Normal</td>";
        }
        echo "</tr>";
    }
    echo "</table>";
    
    echo "<h3>3Ô∏è‚É£ ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ</h3>";
    echo "<ol>";
    echo "<li><strong>Double API Call:</strong> Frontend ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏™‡∏£‡πâ‡∏≤‡∏á order 2 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á</li>";
    echo "<li><strong>Double createOrderItems Call:</strong> Backend ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å createOrderItems 2 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á order ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß</li>";
    echo "<li><strong>Transaction Issue:</strong> Transaction ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</li>";
    echo "<li><strong>Browser Double Submit:</strong> User ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Submit ‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á</li>";
    echo "</ol>";
    
    echo "<h3>4Ô∏è‚É£ ‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</h3>";
    echo "<ol>";
    echo "<li><strong>‡πÄ‡∏û‡∏¥‡πà‡∏° Duplicate Check:</strong> ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö order_items ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà</li>";
    echo "<li><strong>‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á Frontend:</strong> ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô double submit</li>";
    echo "<li><strong>‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥:</strong> ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà</li>";
    echo "</ol>";
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á SQL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥
    if (!empty($duplicateOrders)) {
        echo "<h4>üßπ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á SQL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥:</h4>";
        echo "<div style='background-color: #f0f0f0; padding: 10px; border: 1px solid #ccc;'>";
        echo "<p><strong>‚ö†Ô∏è ‡∏£‡∏∞‡∏ß‡∏±‡∏á:</strong> ‡∏ó‡∏≥ backup ‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏±‡∏ô SQL ‡∏ô‡∏µ‡πâ</p>";
        echo "<code>";
        echo "-- ‡∏•‡∏ö order_items ‡∏ã‡πâ‡∏≥ (‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÅ‡∏Ñ‡πà record ‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤)<br>";
        echo "DELETE t1 FROM order_items t1<br>";
        echo "INNER JOIN order_items t2<br>";
        echo "WHERE t1.id > t2.id<br>";
        echo "&nbsp;&nbsp;AND t1.DocumentNo = t2.DocumentNo<br>";
        echo "&nbsp;&nbsp;AND t1.ProductCode = t2.ProductCode<br>";
        echo "&nbsp;&nbsp;AND t1.ProductName = t2.ProductName<br>";
        echo "&nbsp;&nbsp;AND t1.UnitPrice = t2.UnitPrice<br>";
        echo "&nbsp;&nbsp;AND t1.Quantity = t2.Quantity;<br><br>";
        
        echo "-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå<br>";
        echo "SELECT DocumentNo, COUNT(*) as item_count<br>";
        echo "FROM order_items<br>";
        echo "GROUP BY DocumentNo<br>";
        echo "HAVING COUNT(*) > 2<br>";
        echo "ORDER BY MAX(CreatedDate) DESC;";
        echo "</code>";
        echo "</div>";
    }
    
} catch (Exception $e) {
    echo "<p style='color: red;'>Error: " . $e->getMessage() . "</p>";
}
?>

<hr>
<h3>üìã ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</h3>
<ol>
<li><strong>‡∏£‡∏±‡∏ô Debug:</strong> <code>http://localhost/Kiro_CRM_production/debug_duplicate_order_items.php</code></li>
<li><strong>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Error Log:</strong> ‡∏î‡∏π‡πÉ‡∏ô logs/php_errors.log ‡∏´‡∏£‡∏∑‡∏≠ Apache error log</li>
<li><strong>‡∏™‡∏£‡πâ‡∏≤‡∏á Order ‡∏ó‡∏î‡∏™‡∏≠‡∏ö:</strong> ‡∏™‡∏£‡πâ‡∏≤‡∏á order ‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏î‡∏π‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡∏ã‡πâ‡∏≥‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà</li>
<li><strong>‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥:</strong> ‡πÉ‡∏ä‡πâ SQL command ‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏ß‡πâ (‡∏ó‡∏≥ backup ‡∏Å‡πà‡∏≠‡∏ô)</li>
</ol>