<?php
echo "<h2>üîç Debug Input Data ‡∏à‡∏£‡∏¥‡∏á</h2>";

echo "<h3>1. JavaScript ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÑ‡∏õ</h3>";
echo "<div style='background: #333; color: #0f0; padding: 15px; font-family: monospace;'>";
echo "<pre>";
echo "// ‡∏ß‡∏≤‡∏á‡πÉ‡∏ô Console ‡∏Å‡πà‡∏≠‡∏ô Submit Order
const originalFetch = window.fetch;
window.fetch = function(url, options) {
    if (url.includes('create.php')) {
        console.log('üö® INTERCEPTING API CALL');
        console.log('URL:', url);
        console.log('Options:', options);
        
        if (options.body) {
            try {
                const data = JSON.parse(options.body);
                console.log('üì§ REQUEST BODY:');
                console.log('CustomerCode:', data.CustomerCode);
                console.log('products:', data.products);
                console.log('total_quantity:', data.total_quantity, typeof data.total_quantity);
                console.log('subtotal_amount:', data.subtotal_amount, typeof data.subtotal_amount);
                console.log('discount_amount:', data.discount_amount, typeof data.discount_amount);
                console.log('discount_percent:', data.discount_percent, typeof data.discount_percent);
                console.log('total_amount:', data.total_amount, typeof data.total_amount);
                
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ subtotal_amount ‡πÄ‡∏õ‡πá‡∏ô empty string ‡πÑ‡∏´‡∏°
                if (data.subtotal_amount === '' || data.subtotal_amount === null || data.subtotal_amount === undefined) {
                    console.log('üö® PROBLEM FOUND: subtotal_amount is empty!');
                }
            } catch (e) {
                console.log('Error parsing body:', e);
            }
        }
    }
    return originalFetch.apply(this, arguments);
};

console.log('‚úÖ Fetch interceptor set');";
echo "</pre>";
echo "</div>";

echo "<h3>2. Debug customer-detail.js submitOrder Function</h3>";
echo "<div style='background: #333; color: #0f0; padding: 15px; font-family: monospace;'>";
echo "<pre>";
echo "// ‡∏ß‡∏≤‡∏á‡πÉ‡∏ô Console ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π submitOrder function ‡∏à‡∏£‡∏¥‡∏á
console.log('üìã CHECKING submitOrder FUNCTION');
if (window.customerDetail && window.customerDetail.submitOrder) {
    console.log('Function found:', typeof window.customerDetail.submitOrder);
    console.log('Function code:', window.customerDetail.submitOrder.toString());
} else {
    console.log('‚ùå submitOrder function not found');
}

// ‡∏´‡∏≤ elements ‡∏à‡∏£‡∏¥‡∏á
console.log('üìã CHECKING ELEMENTS');
const elements = {
    totalQty: document.getElementById('total-quantity'),
    subtotal: document.getElementById('subtotal-amount'),
    discount: document.getElementById('discount-amount'),
    percent: document.getElementById('discount-percent'),
    total: document.getElementById('total-amount')
};

Object.keys(elements).forEach(key => {
    const el = elements[key];
    if (el) {
        console.log(`‚úÖ \${key}:`, {
            id: el.id,
            value: el.value,
            type: typeof el.value,
            empty: el.value === '',
            null: el.value === null,
            undefined: el.value === undefined
        });
    } else {
        console.log(`‚ùå \${key}: NOT FOUND`);
    }
});";
echo "</pre>";
echo "</div>";

echo "<h3>3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Apache Error Log</h3>";
echo "<div style='background: #fff3cd; padding: 15px; border-left: 4px solid #ffc107;'>";
echo "<p>‡∏´‡∏≤ log message ‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡πÉ‡∏ô Apache Error Log:</p>";
echo "<pre style='background: #333; color: #fff; padding: 10px;'>";
echo "=== FRONTEND DIRECT MAPPING ===
Frontend Subtotal Amount: [‡∏Ñ‡πà‡∏≤‡πÉ‡∏î‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡∏∂‡πà‡∏á]

‡∏´‡∏≤‡∏Å‡πÄ‡∏´‡πá‡∏ô:
- Frontend Subtotal Amount: 260 ‚Üí ‡∏™‡πà‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
- Frontend Subtotal Amount: 376.92 ‚Üí Frontend ‡∏™‡πà‡∏á‡∏ú‡∏¥‡∏î
- Frontend Subtotal Amount: 0 ‡∏´‡∏£‡∏∑‡∏≠ empty ‚Üí Element ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤";
echo "</pre>";
echo "</div>";

echo "<h3>4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÉ‡∏ô JavaScript</h3>";
echo "<div style='background: #333; color: #0f0; padding: 15px; font-family: monospace;'>";
echo "<pre>";
echo "// ‡∏ß‡∏≤‡∏á‡πÉ‡∏ô Console ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì
function debugCalculation() {
    console.log('üßÆ CALCULATION DEBUG');
    
    const products = document.querySelectorAll('[name=\"product_quantity[]\"]');
    const prices = document.querySelectorAll('[name=\"product_price[]\"]');
    
    let manualTotal = 0;
    products.forEach((qtyEl, i) => {
        const qty = parseFloat(qtyEl.value || 0);
        const price = parseFloat(prices[i]?.value || 0);
        const lineTotal = qty * price;
        manualTotal += lineTotal;
        console.log(`Product \${i+1}: \${qty} √ó \${price} = \${lineTotal}`);
    });
    
    const displayedSubtotal = document.getElementById('subtotal-amount')?.value;
    
    console.log('üìä TOTALS:');
    console.log('Manual calculation:', manualTotal.toFixed(2));
    console.log('Displayed subtotal:', displayedSubtotal);
    console.log('Match:', Math.abs(parseFloat(displayedSubtotal) - manualTotal) < 0.01);
    
    if (manualTotal === 376.92) {
        console.log('üö® PROBLEM: JavaScript ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏õ‡πá‡∏ô 376.92');
        console.log('‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤ Frontend ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ú‡∏¥‡∏î ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà Backend');
    } else if (parseFloat(displayedSubtotal) === 376.92) {
        console.log('üö® PROBLEM: Element ‡πÅ‡∏™‡∏î‡∏á 376.92 ‡πÅ‡∏ï‡πà‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å');
        console.log('‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤ JavaScript calculation function ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤');
    }
}

debugCalculation();";
echo "</pre>";
echo "</div>";

echo "<h3>5. Quick Fix Test</h3>";
echo "<div style='background: #d4edda; padding: 15px; border-left: 4px solid #28a745;'>";
echo "<p>‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏î‡πà‡∏ß‡∏ô:</p>";
echo "<pre style='background: #333; color: #0f0; padding: 10px; font-family: monospace;'>";
echo "// ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏™‡πà‡∏Ñ‡πà‡∏≤ 260 ‡∏•‡∏á‡πÉ‡∏ô subtotal-amount
document.getElementById('subtotal-amount').value = '260';

// ‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á Submit ‡∏î‡∏π
// ‡∏ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ 260 ‡πÉ‡∏ô Database ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤ Backend ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß
// ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏î‡πâ 376.92 ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏à‡∏∏‡∏î‡∏≠‡∏∑‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ó‡∏±‡∏ö";
echo "</pre>";
echo "</div>";

require_once 'config/database.php';

try {
    $db = Database::getInstance();
    $conn = $db->getConnection();
    
    echo "<h3>6. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ProductsDetail ‡πÉ‡∏ô Database</h3>";
    
    $result = $conn->query("
        SELECT DocumentNo, ProductsDetail, SubtotalAmount, Quantity, Price
        FROM orders 
        ORDER BY CreatedDate DESC 
        LIMIT 1
    ");
    
    if ($result->rowCount() > 0) {
        $order = $result->fetch(PDO::FETCH_ASSOC);
        
        echo "<div style='background: #f8f9fa; padding: 15px; border: 1px solid #dee2e6;'>";
        echo "<strong>Order:</strong> " . $order['DocumentNo'] . "<br>";
        echo "<strong>ProductsDetail:</strong><br>";
        
        if (!empty($order['ProductsDetail'])) {
            $products = json_decode($order['ProductsDetail'], true);
            if ($products) {
                echo "<pre style='background: #333; color: #fff; padding: 10px; font-size: 12px;'>";
                print_r($products);
                echo "</pre>";
                
                $calculatedFromProducts = 0;
                foreach ($products as $product) {
                    $qty = (float)($product['quantity'] ?? 0);
                    $price = (float)($product['price'] ?? 0);
                    $calculatedFromProducts += ($qty * $price);
                }
                
                echo "<div style='background: #fff3cd; padding: 10px; margin: 10px 0;'>";
                echo "<strong>üßÆ Analysis:</strong><br>";
                echo "Calculated from ProductsDetail: " . number_format($calculatedFromProducts, 2) . "<br>";
                echo "Database SubtotalAmount: " . $order['SubtotalAmount'] . "<br>";
                
                if (abs($calculatedFromProducts - 376.92) < 0.01) {
                    echo "‚ùå <strong>‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏:</strong> Frontend ‡∏™‡πà‡∏á products ‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏õ‡πá‡∏ô 376.92<br>";
                    echo "üìã <strong>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:</strong> ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ JavaScript calculation function";
                } elseif (abs($calculatedFromProducts - 260) < 0.01) {
                    echo "‚úÖ ProductsDetail ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (260) ‡πÅ‡∏ï‡πà SubtotalAmount ‡∏ú‡∏¥‡∏î (376.92)<br>";
                    echo "üìã <strong>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:</strong> ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö API mapping logic";
                }
                echo "</div>";
            }
        }
        echo "</div>";
    }
    
} catch (Exception $e) {
    echo "<p style='color: #dc3545;'>Error: " . $e->getMessage() . "</p>";
}
?>

<style>
pre { font-size: 12px; line-height: 1.4; }
</style>