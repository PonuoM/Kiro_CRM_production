<?php
/**
 * Cleanup Duplicate Order Items
 * ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• order_items ‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥
 */

header('Content-Type: text/html; charset=utf-8');
require_once 'config/database.php';

echo "<h2>üßπ Cleanup Duplicate Order Items</h2>";

try {
    $db = Database::getInstance();
    $pdo = $db->getConnection();
    
    // ‡πÄ‡∏£‡∏¥‡πà‡∏° transaction
    $pdo->beginTransaction();
    
    echo "<h3>1Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î</h3>";
    
    // ‡∏ô‡∏±‡∏ö order_items ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    $stmt = $pdo->query("SELECT COUNT(*) as total FROM order_items");
    $totalBefore = $stmt->fetch(PDO::FETCH_ASSOC)['total'];
    
    // ‡∏´‡∏≤ order_items ‡∏ã‡πâ‡∏≥
    $stmt = $pdo->query("
        SELECT 
            DocumentNo,
            ProductCode,
            ProductName,
            UnitPrice,
            Quantity,
            COUNT(*) as duplicate_count
        FROM order_items
        GROUP BY DocumentNo, ProductCode, ProductName, UnitPrice, Quantity
        HAVING COUNT(*) > 1
        ORDER BY DocumentNo DESC, ProductCode
    ");
    
    $duplicates = $stmt->fetchAll(PDO::FETCH_ASSOC);
    $duplicateCount = count($duplicates);
    
    echo "<p><strong>Order Items ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:</strong> {$totalBefore} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>";
    echo "<p><strong>‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥:</strong> {$duplicateCount} ‡∏Å‡∏•‡∏∏‡πà‡∏°</p>";
    
    if ($duplicateCount > 0) {
        echo "<h4>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥:</h4>";
        echo "<table border='1' style='border-collapse: collapse;'>";
        echo "<tr><th>DocumentNo</th><th>ProductCode</th><th>ProductName</th><th>Price</th><th>Qty</th><th>Duplicate Count</th></tr>";
        
        $totalDuplicateItems = 0;
        foreach ($duplicates as $dup) {
            echo "<tr>";
            echo "<td>{$dup['DocumentNo']}</td>";
            echo "<td>{$dup['ProductCode']}</td>";
            echo "<td>{$dup['ProductName']}</td>";
            echo "<td>" . number_format($dup['UnitPrice'], 2) . "</td>";
            echo "<td>{$dup['Quantity']}</td>";
            echo "<td style='color: red;'><strong>{$dup['duplicate_count']}</strong></td>";
            echo "</tr>";
            
            $totalDuplicateItems += ($dup['duplicate_count'] - 1); // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö (‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ 1 ‡∏≠‡∏±‡∏ô)
        }
        echo "</table>";
        
        echo "<p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö:</strong> <span style='color: red;'>{$totalDuplicateItems} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</span></p>";
        
        echo "<h3>2Ô∏è‚É£ ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥</h3>";
        
        // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥ (‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÅ‡∏Ñ‡πà record ‡∏ó‡∏µ‡πà‡∏°‡∏µ id ‡∏ô‡πâ‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î)
        $cleanupSQL = "
            DELETE t1 FROM order_items t1
            INNER JOIN order_items t2
            WHERE t1.id > t2.id
              AND t1.DocumentNo = t2.DocumentNo
              AND t1.ProductCode = t2.ProductCode
              AND t1.ProductName = t2.ProductName
              AND t1.UnitPrice = t2.UnitPrice
              AND t1.Quantity = t2.Quantity
        ";
        
        $stmt = $pdo->prepare($cleanupSQL);
        $deleteResult = $stmt->execute();
        $deletedCount = $stmt->rowCount();
        
        if ($deleteResult) {
            echo "<p style='color: green;'>‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {$deletedCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>";
        } else {
            echo "<p style='color: red;'>‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>";
            throw new Exception("Failed to delete duplicate records");
        }
        
    } else {
        echo "<p style='color: green;'>‚úÖ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥</p>";
    }
    
    echo "<h3>3Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î</h3>";
    
    // ‡∏ô‡∏±‡∏ö order_items ‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î
    $stmt = $pdo->query("SELECT COUNT(*) as total FROM order_items");
    $totalAfter = $stmt->fetch(PDO::FETCH_ASSOC)['total'];
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    $stmt = $pdo->query("
        SELECT COUNT(*) as remaining_duplicates
        FROM (
            SELECT DocumentNo, ProductCode, ProductName, UnitPrice, Quantity
            FROM order_items
            GROUP BY DocumentNo, ProductCode, ProductName, UnitPrice, Quantity
            HAVING COUNT(*) > 1
        ) as duplicates
    ");
    $remainingDuplicates = $stmt->fetch(PDO::FETCH_ASSOC)['remaining_duplicates'];
    
    echo "<p><strong>Order Items ‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î:</strong> {$totalAfter} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>";
    echo "<p><strong>‡∏•‡∏î‡∏•‡∏á:</strong> " . ($totalBefore - $totalAfter) . " ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>";
    echo "<p><strong>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠:</strong> {$remainingDuplicates} ‡∏Å‡∏•‡∏∏‡πà‡∏°</p>";
    
    if ($remainingDuplicates == 0) {
        echo "<p style='color: green;'>‚úÖ ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô - ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥‡πÅ‡∏•‡πâ‡∏ß</p>";
    } else {
        echo "<p style='color: orange;'>‚ö†Ô∏è ‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏≠‡∏¢‡∏π‡πà ‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</p>";
    }
    
    echo "<h3>4Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h3>";
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö orders ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ order_items
    $stmt = $pdo->query("
        SELECT 
            o.DocumentNo,
            o.CustomerCode,
            o.CreatedDate,
            COUNT(oi.id) as item_count
        FROM orders o
        LEFT JOIN order_items oi ON o.DocumentNo = oi.DocumentNo
        WHERE o.CreatedDate >= DATE_SUB(NOW(), INTERVAL 1 DAY)
        GROUP BY o.DocumentNo
        HAVING COUNT(oi.id) = 0
        ORDER BY o.CreatedDate DESC
        LIMIT 10
    ");
    
    $ordersWithoutItems = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    if (empty($ordersWithoutItems)) {
        echo "<p style='color: green;'>‚úÖ Orders ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏°‡∏µ order_items</p>";
    } else {
        echo "<p style='color: orange;'>‚ö†Ô∏è ‡∏û‡∏ö Orders ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ order_items:</p>";
        echo "<table border='1' style='border-collapse: collapse;'>";
        echo "<tr><th>DocumentNo</th><th>CustomerCode</th><th>CreatedDate</th></tr>";
        
        foreach ($ordersWithoutItems as $order) {
            echo "<tr>";
            echo "<td>{$order['DocumentNo']}</td>";
            echo "<td>{$order['CustomerCode']}</td>";
            echo "<td>{$order['CreatedDate']}</td>";
            echo "</tr>";
        }
        echo "</table>";
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    echo "<h4>‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ Orders ‡πÅ‡∏•‡∏∞ Order Items (24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î):</h4>";
    $stmt = $pdo->query("
        SELECT 
            COUNT(DISTINCT o.DocumentNo) as order_count,
            COUNT(oi.id) as item_count,
            AVG(items_per_order.item_count) as avg_items_per_order
        FROM orders o
        LEFT JOIN order_items oi ON o.DocumentNo = oi.DocumentNo
        LEFT JOIN (
            SELECT DocumentNo, COUNT(*) as item_count
            FROM order_items
            GROUP BY DocumentNo
        ) items_per_order ON o.DocumentNo = items_per_order.DocumentNo
        WHERE o.CreatedDate >= DATE_SUB(NOW(), INTERVAL 1 DAY)
    ");
    
    $stats = $stmt->fetch(PDO::FETCH_ASSOC);
    
    echo "<ul>";
    echo "<li><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Orders:</strong> {$stats['order_count']} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</li>";
    echo "<li><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Order Items:</strong> {$stats['item_count']} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</li>";
    echo "<li><strong>‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ Items ‡∏ï‡πà‡∏≠ Order:</strong> " . number_format($stats['avg_items_per_order'], 2) . " ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</li>";
    echo "</ul>";
    
    // Commit transaction
    $pdo->commit();
    echo "<p style='color: green;'><strong>‚úÖ Transaction committed successfully</strong></p>";
    
} catch (Exception $e) {
    // Rollback transaction on error
    if ($pdo->inTransaction()) {
        $pdo->rollback();
        echo "<p style='color: red;'><strong>‚ùå Transaction rolled back</strong></p>";
    }
    echo "<p style='color: red;'>Error: " . $e->getMessage() . "</p>";
}
?>

<hr>
<h3>üìã ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</h3>
<p><strong>‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:</strong></p>
<ul>
<li>üîß <strong>Double Call Issue:</strong> ‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å createOrderItems ‡∏ã‡πâ‡∏≥‡πÉ‡∏ô api/orders/create.php</li>
<li>üßπ <strong>Data Cleanup:</strong> ‡∏•‡∏ö order_items ‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</li>
<li>‚úÖ <strong>Single Source:</strong> ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ createOrderItems ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÅ‡∏Ñ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÉ‡∏ô Order.php</li>
</ul>

<p><strong>‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á:</strong></p>
<ul>
<li>Orders ‡πÉ‡∏´‡∏°‡πà‡∏à‡∏∞‡∏°‡∏µ order_items ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥</li>
<li>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô items ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</li>
<li>ProductsCode ‡πÅ‡∏•‡∏∞ ProductsDetail ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô</li>
</ul>

<h3>üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö:</h3>
<ol>
<li>‡∏™‡∏£‡πâ‡∏≤‡∏á Order ‡πÉ‡∏´‡∏°‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ 2 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</li>
<li>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ order_items ‡∏°‡∏µ‡πÅ‡∏Ñ‡πà 2 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥)</li>
<li>‡∏£‡∏±‡∏ô debug_duplicate_order_items.php ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô</li>
</ol>