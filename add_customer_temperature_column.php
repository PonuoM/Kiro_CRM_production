<?php
/**
 * Add CustomerTemperature Column to Customers Table
 * ‡πÄ‡∏û‡∏¥‡πà‡∏° column CustomerTemperature ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç error ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ basket
 */

// Start session
if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

require_once 'config/database.php';

echo "<h2>üå°Ô∏è Add CustomerTemperature Column</h2>";
echo "<p>‡πÄ‡∏û‡∏¥‡πà‡∏° column CustomerTemperature ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á customers ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç error ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ basket</p>";

try {
    $db = Database::getInstance();
    $pdo = $db->getConnection();
    echo "‚úÖ Database connected<br><br>";
    
    // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    echo "<h3>üìã Current Table Structure</h3>";
    $stmt = $pdo->query("DESCRIBE customers");
    $columns = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    $hasCustomerTemperature = false;
    foreach ($columns as $column) {
        if ($column['Field'] === 'CustomerTemperature') {
            $hasCustomerTemperature = true;
            break;
        }
    }
    
    if ($hasCustomerTemperature) {
        echo "<div style='background: #d4edda; padding: 10px; border-radius: 5px;'>";
        echo "‚úÖ CustomerTemperature column already exists!";
        echo "</div>";
    } else {
        echo "<div style='background: #fff3cd; padding: 10px; border-radius: 5px;'>";
        echo "‚ö†Ô∏è CustomerTemperature column not found. Will add it now.";
        echo "</div>";
        
        // 2. ‡πÄ‡∏û‡∏¥‡πà‡∏° column CustomerTemperature
        echo "<h3>üîß Adding CustomerTemperature Column</h3>";
        
        $alterSQL = "ALTER TABLE customers ADD COLUMN CustomerTemperature ENUM('HOT', 'WARM', 'COLD', 'FROZEN') DEFAULT 'WARM' COMMENT '‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: HOT=‡∏™‡∏ô‡πÉ‡∏à‡∏°‡∏≤‡∏Å, WARM=‡∏™‡∏ô‡πÉ‡∏à, COLD=‡πÑ‡∏°‡πà‡∏Ñ‡πà‡∏≠‡∏¢‡∏™‡∏ô‡πÉ‡∏à, FROZEN=‡πÑ‡∏°‡πà‡∏™‡∏ô‡πÉ‡∏à' AFTER CustomerGrade";
        
        $result = $pdo->exec($alterSQL);
        
        echo "<div style='background: #d4edda; padding: 10px; border-radius: 5px; margin: 10px 0;'>";
        echo "‚úÖ <strong>Successfully added CustomerTemperature column!</strong><br>";
        echo "Column added with ENUM('HOT', 'WARM', 'COLD', 'FROZEN') and default value 'WARM'.";
        echo "</div>";
        
        // 3. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏° logic
        echo "<h3>üìä Updating Customer Temperature</h3>";
        
        // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î temperature ‡∏ï‡∏≤‡∏° logic
        $temperatureUpdates = [
            "UPDATE customers SET CustomerTemperature = 'HOT' WHERE CustomerGrade = 'A' AND CartStatus = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏π‡πÅ‡∏•'", // HOT - VIP ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£
            "UPDATE customers SET CustomerTemperature = 'WARM' WHERE CustomerGrade = 'B' AND CartStatus = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏π‡πÅ‡∏•'", // WARM - ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏î‡∏µ
            "UPDATE customers SET CustomerTemperature = 'WARM' WHERE CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà'", // WARM - ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
            "UPDATE customers SET CustomerTemperature = 'COLD' WHERE CartStatus = '‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏£‡∏≠'", // COLD - ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏≠
            "UPDATE customers SET CustomerTemperature = 'FROZEN' WHERE CartStatus = '‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÅ‡∏à‡∏Å'" // FROZEN - ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÅ‡∏à‡∏Å‡∏≠‡∏≠‡∏Å
        ];
        
        $totalUpdated = 0;
        foreach ($temperatureUpdates as $index => $updateSQL) {
            $affected = $pdo->exec($updateSQL);
            $totalUpdated += $affected;
            
            $tempLabels = ['HOT (‡∏™‡∏ô‡πÉ‡∏à‡∏°‡∏≤‡∏Å)', 'WARM (‡∏™‡∏ô‡πÉ‡∏à)', 'WARM (‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà)', 'COLD (‡πÑ‡∏°‡πà‡∏Ñ‡πà‡∏≠‡∏¢‡∏™‡∏ô‡πÉ‡∏à)', 'FROZEN (‡πÑ‡∏°‡πà‡∏™‡∏ô‡πÉ‡∏à)'];
            echo "<div style='background: #cff4fc; padding: 5px 10px; margin: 3px 0; border-radius: 3px; font-size: 14px;'>";
            echo "üå°Ô∏è Updated <strong>$affected</strong> customers to <strong>{$tempLabels[$index]}</strong>";
            echo "</div>";
        }
        
        echo "<div style='background: #d4edda; padding: 10px; border-radius: 5px; margin: 10px 0;'>";
        echo "üìà <strong>Temperature Assignment Complete:</strong><br>";
        echo "Total customers updated: <strong>$totalUpdated</strong><br>";
        echo "Temperature assignment based on CustomerGrade and CartStatus logic.";
        echo "</div>";
    }
    
    // 4. ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ temperature
    echo "<h3>üìà Customer Temperature Statistics</h3>";
    $stmt = $pdo->query("SELECT CustomerTemperature, COUNT(*) as count FROM customers GROUP BY CustomerTemperature ORDER BY FIELD(CustomerTemperature, 'HOT', 'WARM', 'COLD', 'FROZEN')");
    $tempStats = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    if (count($tempStats) > 0) {
        echo "<table border='1' style='border-collapse: collapse; margin: 10px 0;'>";
        echo "<tr style='background: #f0f0f0;'><th>Temperature</th><th>Description</th><th>Count</th><th>Percentage</th></tr>";
        
        $tempDescriptions = [
            'HOT' => 'üî• ‡∏™‡∏ô‡πÉ‡∏à‡∏°‡∏≤‡∏Å ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ VIP ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£',
            'WARM' => 'üå°Ô∏è ‡∏™‡∏ô‡πÉ‡∏à ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà', 
            'COLD' => '‚ùÑÔ∏è ‡πÑ‡∏°‡πà‡∏Ñ‡πà‡∏≠‡∏¢‡∏™‡∏ô‡πÉ‡∏à ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°',
            'FROZEN' => 'üßä ‡πÑ‡∏°‡πà‡∏™‡∏ô‡πÉ‡∏à ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÅ‡∏à‡∏Å‡∏≠‡∏≠‡∏Å'
        ];
        
        $tempColors = [
            'HOT' => '#ffe6e6',
            'WARM' => '#fff3cd',
            'COLD' => '#e2f3ff',
            'FROZEN' => '#f0f0f0'
        ];
        
        $total = array_sum(array_column($tempStats, 'count'));
        foreach ($tempStats as $stat) {
            $percentage = $total > 0 ? round(($stat['count'] / $total) * 100, 1) : 0;
            $bgColor = $tempColors[$stat['CustomerTemperature']] ?? '#fff';
            
            echo "<tr style='background: $bgColor;'>";
            echo "<td><strong>{$stat['CustomerTemperature']}</strong></td>";
            echo "<td>{$tempDescriptions[$stat['CustomerTemperature']]}</td>";
            echo "<td>{$stat['count']}</td>";
            echo "<td>{$percentage}%</td>";
            echo "</tr>";
        }
        echo "</table>";
    }
    
    // 5. ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏° Grade + Temperature
    echo "<h3>üìä Grade vs Temperature Matrix</h3>";
    $stmt = $pdo->query("SELECT CustomerGrade, CustomerTemperature, COUNT(*) as count FROM customers GROUP BY CustomerGrade, CustomerTemperature ORDER BY CustomerGrade, CustomerTemperature");
    $matrixData = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    if (count($matrixData) > 0) {
        echo "<table border='1' style='border-collapse: collapse; margin: 10px 0; font-size: 12px;'>";
        echo "<tr style='background: #f0f0f0;'><th>Grade</th><th>Temperature</th><th>Count</th></tr>";
        
        foreach ($matrixData as $row) {
            $bgColor = ($row['CustomerGrade'] === 'A' && $row['CustomerTemperature'] === 'HOT') ? '#e8f5e8' : '#fff';
            echo "<tr style='background: $bgColor;'>";
            echo "<td><strong>{$row['CustomerGrade']}</strong></td>";
            echo "<td><strong>{$row['CustomerTemperature']}</strong></td>";
            echo "<td>{$row['count']}</td>";
            echo "</tr>";
        }
        echo "</table>";
    }
    
    // 6. ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    echo "<h3>üìã Sample Data with Grade + Temperature</h3>";
    $stmt = $pdo->query("SELECT CustomerCode, CustomerName, CustomerStatus, CartStatus, CustomerGrade, CustomerTemperature, Sales FROM customers ORDER BY CustomerGrade, CustomerTemperature LIMIT 8");
    $sampleData = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    if (count($sampleData) > 0) {
        echo "<table border='1' style='border-collapse: collapse; margin: 10px 0; font-size: 12px;'>";
        echo "<tr style='background: #f0f0f0;'><th>Code</th><th>Name</th><th>Status</th><th>Cart Status</th><th>Grade</th><th>Temp</th><th>Sales</th></tr>";
        
        foreach ($sampleData as $row) {
            $bgColor = ($row['CustomerGrade'] === 'A' && $row['CustomerTemperature'] === 'HOT') ? '#e8f5e8' : '#fff';
            echo "<tr style='background: $bgColor;'>";
            echo "<td>{$row['CustomerCode']}</td>";
            echo "<td>{$row['CustomerName']}</td>";
            echo "<td>{$row['CustomerStatus']}</td>";
            echo "<td>{$row['CartStatus']}</td>";
            echo "<td><strong>{$row['CustomerGrade']}</strong></td>";
            echo "<td><strong>{$row['CustomerTemperature']}</strong></td>";
            echo "<td>{$row['Sales']}</td>";
            echo "</tr>";
        }
        echo "</table>";
    }
    
    // 7. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å log
    try {
        $stmt = $pdo->query("SHOW TABLES LIKE 'system_logs'");
        if ($stmt->rowCount() > 0) {
            $logStmt = $pdo->prepare("INSERT INTO system_logs (LogType, Action, Details, AffectedCount, CreatedBy, CreatedDate) VALUES (?, ?, ?, ?, ?, NOW())");
            $logDetails = "Added CustomerTemperature column to customers table and updated " . ($totalUpdated ?? 0) . " customer temperatures";
            $logStmt->execute(['SCHEMA_UPDATE', 'ADD_COLUMN', $logDetails, ($totalUpdated ?? 0), 'system']);
            
            echo "<div style='background: #e2e3e5; padding: 10px; border-radius: 5px; margin: 10px 0;'>";
            echo "üìù Log entry created in system_logs table";
            echo "</div>";
        }
    } catch (Exception $e) {
        // Ignore log errors - not critical
    }
    
} catch (Exception $e) {
    echo "<div style='background: #f8d7da; padding: 15px; border-radius: 5px;'>";
    echo "‚ùå <strong>Error:</strong> " . $e->getMessage();
    echo "</div>";
}

echo "<h3>üöÄ Next Steps</h3>";
echo "<div style='background: #d4edda; padding: 15px; border-radius: 5px;'>";
echo "‚úÖ <strong>CustomerTemperature column added successfully!</strong> ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ:<br>";
echo "1. <a href='pages/admin/distribution_basket.php'>üóÉÔ∏è Distribution Basket</a> - ‡∏Ñ‡∏ß‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏ï‡πá‡∏°‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß<br>";
echo "2. <a href='pages/admin/waiting_basket.php'>‚è≥ Waiting Basket</a> - ‡∏Ñ‡∏ß‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏ï‡πá‡∏°‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß<br>";
echo "3. ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Grade ‡πÅ‡∏•‡∏∞ Temperature ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå<br>";
echo "4. ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Daily Tasks ‡πÅ‡∏•‡∏∞ UI ‡∏≠‡∏∑‡πà‡∏ô‡πÜ<br>";
echo "</div>";

echo "<h3>üîó Quick Links</h3>";
echo "<a href='pages/admin/distribution_basket.php'>üóÉÔ∏è Distribution Basket</a> | ";
echo "<a href='pages/admin/waiting_basket.php'>‚è≥ Waiting Basket</a> | ";
echo "<a href='pages/daily_tasks_demo.php'>üìÖ Daily Tasks</a>";

echo "<div style='margin-top: 20px; padding: 10px; background: #f8f9fa; border-radius: 5px; border-left: 4px solid #17a2b8;'>";
echo "<strong>üå°Ô∏è CustomerTemperature Column Added Successfully!</strong><br>";
  echo "Temperature scale: HOT (üî•) ‚Üí WARM (üå°Ô∏è) ‚Üí COLD (‚ùÑÔ∏è) ‚Üí FROZEN (üßä)<br>";
echo "Both basket pages should work perfectly now! üéâ";
echo "</div>";
?>