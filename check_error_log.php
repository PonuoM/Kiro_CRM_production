<?php
echo "<h2>üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Apache Error Log</h2>";

echo "<h3>1. ‡∏≠‡πà‡∏≤‡∏ô Error Log ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</h3>";

$logPaths = [
    '/var/log/apache2/error.log',
    '/xampp/apache/logs/error.log', 
    '/opt/lampp/logs/error_log',
    dirname(__FILE__) . '/logs/php_errors.log',
    dirname(__FILE__) . '/error_log',
    ini_get('error_log')
];

$logFound = false;
$logContent = '';

foreach ($logPaths as $path) {
    if (file_exists($path) && is_readable($path)) {
        echo "<div style='background: #d4edda; padding: 10px; margin: 5px 0;'>";
        echo "‚úÖ ‡∏û‡∏ö Log ‡∏ó‡∏µ‡πà: <code>$path</code>";
        echo "</div>";
        
        // ‡∏≠‡πà‡∏≤‡∏ô 50 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
        $lines = file($path);
        if ($lines) {
            $recentLines = array_slice($lines, -50);
            $logContent = implode('', $recentLines);
            $logFound = true;
            break;
        }
    }
}

if (!$logFound) {
    echo "<div style='background: #f8d7da; padding: 15px; border-left: 4px solid #dc3545;'>";
    echo "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Error Log ‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô<br>";
    echo "‡∏•‡∏≠‡∏á: <code>find / -name \"*error*log*\" 2>/dev/null</code>";
    echo "</div>";
} else {
    echo "<h3>2. Log ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (50 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î)</h3>";
    echo "<div style='background: #333; color: #0f0; padding: 15px; font-family: monospace; height: 400px; overflow-y: scroll; font-size: 12px;'>";
    
    // ‡∏Å‡∏£‡∏≠‡∏á log ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö Order
    $lines = explode("\n", $logContent);
    $orderRelatedLines = [];
    
    foreach ($lines as $line) {
        if (stripos($line, 'ORDER') !== false || 
            stripos($line, 'FRONTEND') !== false || 
            stripos($line, 'CALCULATION') !== false ||
            stripos($line, 'MAPPING') !== false ||
            stripos($line, 'VALUE SELECTION') !== false) {
            $orderRelatedLines[] = htmlspecialchars($line);
        }
    }
    
    if (!empty($orderRelatedLines)) {
        echo "<strong>üéØ Order Related Logs:</strong><br><br>";
        foreach ($orderRelatedLines as $line) {
            echo $line . "<br>";
        }
        echo "<br><hr><br>";
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á log ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    echo "<strong>üìã Full Recent Log:</strong><br><br>";
    echo nl2br(htmlspecialchars($logContent));
    echo "</div>";
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á debug tool ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
echo "<h3>3. Advanced Debug Tool</h3>";
echo "<div style='background: #333; color: #0f0; padding: 15px; font-family: monospace;'>";
echo "<pre>";
echo "// ‡∏ß‡∏≤‡∏á‡πÉ‡∏ô Console ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô
function fullDebug() {
    console.log('üîç FULL ORDER DEBUG');
    
    // ‡∏î‡∏π‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô element
    const subtotalEl = document.getElementById('subtotal-amount');
    console.log('üìä SUBTOTAL ELEMENT:');
    console.log('- Element:', subtotalEl);
    console.log('- Value:', subtotalEl?.value);
    console.log('- Type:', typeof subtotalEl?.value);
    console.log('- Empty check:', subtotalEl?.value === '');
    console.log('- Null check:', subtotalEl?.value === null);
    console.log('- Undefined check:', subtotalEl?.value === undefined);
    
    // ‡∏î‡∏π products ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á‡πÑ‡∏õ
    const products = [];
    const productRows = document.querySelectorAll('.product-row, [class*=\"product\"]');
    
    document.querySelectorAll('[name=\"product_quantity[]\"]').forEach((qtyEl, i) => {
        const priceEl = document.querySelectorAll('[name=\"product_price[]\"]')[i];
        const nameEl = document.querySelectorAll('[name=\"product_name[]\"]')[i];
        
        products.push({
            name: nameEl?.value || 'Unknown',
            quantity: parseFloat(qtyEl.value || 0),
            price: parseFloat(priceEl?.value || 0),
            total: parseFloat(qtyEl.value || 0) * parseFloat(priceEl?.value || 0)
        });
    });
    
    console.log('üì¶ PRODUCTS TO SEND:');
    products.forEach((p, i) => {
        console.log(`\${i+1}. \${p.name}: \${p.quantity} √ó \${p.price} = \${p.total}`);
    });
    
    const calculatedTotal = products.reduce((sum, p) => sum + p.total, 0);
    console.log('üßÆ CALCULATED TOTAL:', calculatedTotal.toFixed(2));
    console.log('üì∫ DISPLAYED TOTAL:', subtotalEl?.value);
    console.log('‚ùì WHY DIFFERENT?', calculatedTotal.toFixed(2) !== subtotalEl?.value ? 'YES - THIS IS THE PROBLEM!' : 'NO');
}

fullDebug();";
echo "</pre>";
echo "</div>";

echo "<h3>4. Force Fix Test</h3>";
echo "<div style='background: #fff3cd; padding: 15px; border-left: 4px solid #ffc107;'>";
echo "<p><strong>üí° ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö:</strong></p>";
echo "<pre style='background: #333; color: #0f0; padding: 10px; font-family: monospace;'>";
echo "// ‡∏ß‡∏≤‡∏á‡πÉ‡∏ô Console ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ products array ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏õ‡πá‡∏ô 260
// ‡πÅ‡∏Å‡πâ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÉ‡∏ô products array ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á

const productPrices = document.querySelectorAll('[name=\"product_price[]\"]');
productPrices.forEach((priceEl, i) => {
    if (i === 0) priceEl.value = '150'; // ‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏£‡∏ß‡∏°‡πÄ‡∏õ‡πá‡∏ô 260
    if (i === 1) priceEl.value = '110';
});

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏£‡∏ß‡∏°
let newTotal = 0;
document.querySelectorAll('[name=\"product_quantity[]\"]').forEach((qtyEl, i) => {
    const priceEl = document.querySelectorAll('[name=\"product_price[]\"]')[i];
    newTotal += parseFloat(qtyEl.value || 0) * parseFloat(priceEl?.value || 0);
});

console.log('üéØ NEW CALCULATED TOTAL:', newTotal);
console.log('Should be 260:', newTotal === 260 ? '‚úÖ YES' : '‚ùå NO');

// ‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á Submit
";
echo "</pre>";
echo "</div>";
?>

<style>
pre { font-size: 12px; line-height: 1.3; }
</style>