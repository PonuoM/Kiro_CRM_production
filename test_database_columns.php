<?php
// test_database_columns.php
// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Database ‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà

require_once 'config/database.php';

echo "<!DOCTYPE html><html><head><meta charset='UTF-8'><title>Database Test</title></head><body>";
echo "<h1>üîç Database Columns Test</h1>";

try {
    $pdo = new PDO($dsn, $username, $password, $options);
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö 1: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö structure ‡∏Ç‡∏≠‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á customers
    echo "<h2>üìã 1. ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (customers) Structure:</h2>";
    $stmt = $pdo->query("DESCRIBE customers");
    $columns = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    echo "<table border='1' style='border-collapse: collapse; width: 100%;'>";
    echo "<tr style='background: #f0f0f0;'><th>Field</th><th>Type</th><th>Null</th><th>Key</th><th>Default</th></tr>";
    
    $hasTemperature = false;
    $hasGrade = false;
    
    foreach ($columns as $column) {
        echo "<tr>";
        echo "<td>" . $column['Field'] . "</td>";
        echo "<td>" . $column['Type'] . "</td>";
        echo "<td>" . $column['Null'] . "</td>";
        echo "<td>" . $column['Key'] . "</td>";
        echo "<td>" . $column['Default'] . "</td>";
        echo "</tr>";
        
        if ($column['Field'] === 'CustomerTemperature') {
            $hasTemperature = true;
        }
        if ($column['Field'] === 'CustomerGrade') {
            $hasGrade = true;
        }
    }
    echo "</table>";
    
    // ‡∏ó‡∏î‡∏™‡∏≠ÿ® 2: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    echo "<h2>‚úÖ 2. Columns Check:</h2>";
    echo "<p>CustomerTemperature: " . ($hasTemperature ? "‚úÖ ‡∏°‡∏µ‡πÅ‡∏•‡πâ‡∏ß" : "‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ") . "</p>";
    echo "<p>CustomerGrade: " . ($hasGrade ? "‚úÖ ‡∏°‡∏µ‡πÅ‡∏•‡πâ‡∏ß" : "‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ") . "</p>";
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö 3: ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ 5 ‡∏Ñ‡∏ô‡πÅ‡∏£‡∏Å
    echo "<h2>üìä 3. ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (5 ‡∏Ñ‡∏ô‡πÅ‡∏£‡∏Å):</h2>";
    
    if ($hasTemperature && $hasGrade) {
        $sql = "SELECT CustomerCode, CustomerName, CustomerStatus, CustomerTemperature, CustomerGrade, CreatedDate 
                FROM customers 
                ORDER BY CreatedDate DESC 
                LIMIT 5";
        $stmt = $pdo->prepare($sql);
        $stmt->execute();
        $customers = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        if ($customers) {
            echo "<table border='1' style='border-collapse: collapse; width: 100%;'>";
            echo "<tr style='background: #f0f0f0;'><th>‡∏£‡∏´‡∏±‡∏™</th><th>‡∏ä‡∏∑‡πà‡∏≠</th><th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th><th>Temperature</th><th>Grade</th><th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á</th></tr>";
            
            foreach ($customers as $customer) {
                echo "<tr>";
                echo "<td>" . $customer['CustomerCode'] . "</td>";
                echo "<td>" . $customer['CustomerName'] . "</td>";
                echo "<td>" . $customer['CustomerStatus'] . "</td>";
                echo "<td style='color: " . ($customer['CustomerTemperature'] === 'HOT' ? 'red' : 'blue') . ";'>" . $customer['CustomerTemperature'] . "</td>";
                echo "<td>" . $customer['CustomerGrade'] . "</td>";
                echo "<td>" . $customer['CreatedDate'] . "</td>";
                echo "</tr>";
            }
            echo "</table>";
        } else {
            echo "<p>‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</p>";
        }
    } else {
        echo "<p>‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô</p>";
    }
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö 4: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Enhanced API Query
    echo "<h2>üöÄ 4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Enhanced API Query:</h2>";
    
    if ($hasTemperature && $hasGrade) {
        try {
            $sql = "SELECT 
                CustomerCode, CustomerName, CustomerTel, CustomerStatus,
                CustomerTemperature, CustomerGrade,
                AssignDate, CreatedDate, LastContactDate,
                CASE 
                    WHEN CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà' THEN 
                        DATEDIFF(DATE_ADD(COALESCE(AssignDate, CreatedDate), INTERVAL 30 DAY), CURDATE())
                    WHEN CustomerStatus IN ('‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°', '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤') THEN 
                        DATEDIFF(DATE_ADD(COALESCE(LastContactDate, AssignDate, CreatedDate), INTERVAL 90 DAY), CURDATE())
                    ELSE 
                        DATEDIFF(DATE_ADD(COALESCE(AssignDate, CreatedDate), INTERVAL 30 DAY), CURDATE())
                END as time_remaining_days
                FROM customers 
                WHERE CustomerStatus IS NOT NULL
                ORDER BY CustomerCode
                LIMIT 3";
            
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $testCustomers = $stmt->fetchAll(PDO::FETCH_ASSOC);
            
            if ($testCustomers) {
                echo "<p>‚úÖ Enhanced Query ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ:</p>";
                echo "<table border='1' style='border-collapse: collapse; width: 100%;'>";
                echo "<tr style='background: #f0f0f0;'><th>‡∏£‡∏´‡∏±‡∏™</th><th>‡∏ä‡∏∑‡πà‡∏≠</th><th>Temperature</th><th>Grade</th><th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠</th></tr>";
                
                foreach ($testCustomers as $customer) {
                    $daysColor = 'green';
                    if ($customer['time_remaining_days'] <= 0) $daysColor = 'red';
                    elseif ($customer['time_remaining_days'] <= 5) $daysColor = 'orange';
                    
                    echo "<tr>";
                    echo "<td>" . $customer['CustomerCode'] . "</td>";
                    echo "<td>" . $customer['CustomerName'] . "</td>";
                    echo "<td style='color: " . ($customer['CustomerTemperature'] === 'HOT' ? 'red' : 'blue') . ";'>" . $customer['CustomerTemperature'] . "</td>";
                    echo "<td>" . $customer['CustomerGrade'] . "</td>";
                    echo "<td style='color: $daysColor;'>" . $customer['time_remaining_days'] . " ‡∏ß‡∏±‡∏ô</td>";
                    echo "</tr>";
                }
                echo "</table>";
            } else {
                echo "<p>‚ùå Enhanced Query ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå</p>";
            }
        } catch (Exception $e) {
            echo "<p>‚ùå Enhanced Query Error: " . $e->getMessage() . "</p>";
        }
    }
    
} catch (Exception $e) {
    echo "<h2>‚ùå Database Connection Error:</h2>";
    echo "<p>" . $e->getMessage() . "</p>";
}

echo "<hr>";
echo "<p><strong>üìç URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö:</strong> <a href='test_database_columns.php'>test_database_columns.php</a></p>";
echo "<p><strong>‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö:</strong> " . date('Y-m-d H:i:s') . "</p>";
echo "</body></html>";
?>