<?php
// fix_sales_display_issues.php
// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ Sales

session_start();

// Bypass auth for fix
if (!isset($_SESSION['user_login'])) {
    $_SESSION['user_login'] = 'admin';
    $_SESSION['user_role'] = 'admin';
}

echo "<!DOCTYPE html><html><head><meta charset='UTF-8'><title>üîß Fix Sales Display Issues</title>";
echo "<link href='https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css' rel='stylesheet'>";
echo "<style>
body{font-family:Arial,sans-serif;padding:20px;background:#f8f9fa;} 
.fix-card{margin:20px 0;border-radius:12px;box-shadow:0 2px 8px rgba(0,0,0,0.1);} 
.step{border-left:5px solid #17a2b8;background:#f0f9ff;} 
.success{border-left:5px solid #28a745;background:#f8fff8;} 
.warning{border-left:5px solid #ffc107;background:#fffbf0;} 
.code-box{background:#2d3748;color:#e2e8f0;padding:15px;border-radius:8px;font-family:monospace;font-size:12px;max-height:400px;overflow:auto;}
</style>";
echo "</head><body>";

echo "<div class='container-fluid'>";
echo "<div class='text-center mb-4'>";
echo "<h1 class='display-6 fw-bold text-primary'>üîß Fix Sales Display Issues</h1>";
echo "<p class='lead text-muted'>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ Sales</p>";
echo "</div>";

try {
    require_once 'config/database.php';
    $db = Database::getInstance();
    $pdo = $db->getConnection();
    
    if (isset($_POST['execute_fix'])) {
        $step = $_POST['step'];
        
        echo "<div class='fix-card success'>";
        echo "<div class='p-4'>";
        echo "<h3>üöÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: $step</h3>";
        
        switch ($step) {
            case 'add_columns':
                // Step 1: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
                echo "<h6>üìù ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏´‡∏°‡πà</h6>";
                
                $alterQueries = [
                    "ALTER TABLE customers ADD COLUMN IF NOT EXISTS AssignDate DATETIME NULL COMMENT '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡∏á‡∏≤‡∏ô'",
                    "ALTER TABLE customers ADD COLUMN IF NOT EXISTS ReceivedDate DATETIME NULL COMMENT '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠'",
                    "ALTER TABLE customers ADD COLUMN IF NOT EXISTS CartStatusDate DATETIME NULL COMMENT '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤'"
                ];
                
                foreach ($alterQueries as $query) {
                    try {
                        $pdo->exec($query);
                        echo "<p class='text-success'>‚úÖ " . htmlspecialchars($query) . "</p>";
                    } catch (Exception $e) {
                        echo "<p class='text-warning'>‚ö†Ô∏è " . htmlspecialchars($e->getMessage()) . "</p>";
                    }
                }
                break;
                
            case 'populate_dates':
                // Step 2: ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
                echo "<h6>üìÖ ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</h6>";
                
                $populateQueries = [
                    // AssignDate = CreatedDate ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ Sales
                    "UPDATE customers SET AssignDate = CreatedDate WHERE Sales IS NOT NULL AND Sales != '' AND AssignDate IS NULL",
                    // ReceivedDate = CreatedDate ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                    "UPDATE customers SET ReceivedDate = CreatedDate WHERE ReceivedDate IS NULL",
                    // CartStatusDate = CreatedDate ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
                    "UPDATE customers SET CartStatusDate = COALESCE(ModifiedDate, CreatedDate) WHERE CustomerStatus = '‡πÉ‡∏ô‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤' AND CartStatusDate IS NULL"
                ];
                
                foreach ($populateQueries as $query) {
                    try {
                        $stmt = $pdo->prepare($query);
                        $stmt->execute();
                        $affected = $stmt->rowCount();
                        echo "<p class='text-success'>‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï: $affected ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>";
                        echo "<small class='text-muted'>" . htmlspecialchars($query) . "</small><br>";
                    } catch (Exception $e) {
                        echo "<p class='text-danger'>‚ùå " . htmlspecialchars($e->getMessage()) . "</p>";
                    }
                }
                break;
                
            case 'fix_status_logic':
                // Step 3: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Business Logic
                echo "<h6>üîÑ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Business Logic</h6>";
                
                $logicQueries = [
                    // ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ Sales ‚Üí ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
                    [
                        'query' => "UPDATE customers SET CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà' WHERE CustomerStatus = '‡πÉ‡∏ô‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤' AND Sales IS NOT NULL AND Sales != ''",
                        'description' => '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ Sales ‚Üí ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà'
                    ],
                    // ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà/‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ Sales ‚Üí ‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
                    [
                        'query' => "UPDATE customers SET CustomerStatus = '‡πÉ‡∏ô‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤', Sales = NULL WHERE CustomerStatus IN ('‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà', '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°') AND (Sales IS NULL OR Sales = '')",
                        'description' => '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà/‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ Sales ‚Üí ‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤'
                    ]
                ];
                
                foreach ($logicQueries as $queryInfo) {
                    try {
                        $stmt = $pdo->prepare($queryInfo['query']);
                        $stmt->execute();
                        $affected = $stmt->rowCount();
                        echo "<p class='text-success'>‚úÖ {$queryInfo['description']}: $affected ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>";
                    } catch (Exception $e) {
                        echo "<p class='text-danger'>‚ùå " . htmlspecialchars($e->getMessage()) . "</p>";
                    }
                }
                break;
                
            case 'update_apis':
                // Step 4: ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï API Files
                echo "<h6>üîÑ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï API Files</h6>";
                
                // Update customers/list.php
                $listApiPath = __DIR__ . '/api/customers/list.php';
                if (file_exists($listApiPath)) {
                    $content = file_get_contents($listApiPath);
                    
                    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô SELECT
                    $newSelect = "SELECT 
                CustomerCode,
                CustomerName,
                CustomerTel,
                CustomerStatus,
                CustomerGrade,
                CustomerTemperature,
                TotalPurchase,
                LastContactDate,
                Sales,
                CreatedDate,
                CustomerProvince,
                ModifiedDate,
                AssignDate,
                ReceivedDate,
                CartStatusDate,
                CASE 
                    WHEN CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà' THEN 
                        30 - DATEDIFF(CURDATE(), COALESCE(AssignDate, CreatedDate))
                    WHEN CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°' THEN 
                        CASE WHEN LastContactDate IS NOT NULL 
                             THEN 15 - DATEDIFF(CURDATE(), LastContactDate)
                             ELSE -999 
                        END
                    ELSE 0
                END as time_remaining_days
            FROM customers WHERE 1=1";
                    
                    // ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà SELECT statement ‡πÄ‡∏î‡∏¥‡∏°
                    $pattern = '/SELECT\s+[\s\S]*?FROM customers WHERE 1=1/i';
                    $newContent = preg_replace($pattern, $newSelect, $content);
                    
                    if ($newContent !== $content) {
                        file_put_contents($listApiPath, $newContent);
                        echo "<p class='text-success'>‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï api/customers/list.php</p>";
                    } else {
                        echo "<p class='text-warning'>‚ö†Ô∏è api/customers/list.php ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á</p>";
                    }
                } else {
                    echo "<p class='text-danger'>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå api/customers/list.php</p>";
                }
                
                // Update tasks/daily.php
                $dailyApiPath = __DIR__ . '/api/tasks/daily.php';
                if (file_exists($dailyApiPath)) {
                    $content = file_get_contents($dailyApiPath);
                    
                    // ‡πÄ‡∏û‡∏¥‡πà‡∏° time_remaining calculation
                    $newSelect = "SELECT t.*, c.CustomerName, c.CustomerTel, c.Sales,
                        CASE 
                            WHEN c.CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà' THEN 
                                30 - DATEDIFF(CURDATE(), COALESCE(c.AssignDate, c.CreatedDate))
                            WHEN c.CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°' THEN 
                                CASE WHEN c.LastContactDate IS NOT NULL 
                                     THEN 15 - DATEDIFF(CURDATE(), c.LastContactDate)
                                     ELSE -999 
                                END
                            ELSE 0
                        END as time_remaining_days
                FROM tasks t 
                LEFT JOIN customers c ON t.CustomerCode = c.CustomerCode 
                WHERE DATE(t.FollowupDate) = ?";
                    
                    $pattern = '/SELECT t\.\*, c\.CustomerName, c\.CustomerTel, c\.Sales\s+FROM tasks t\s+LEFT JOIN customers c ON t\.CustomerCode = c\.CustomerCode\s+WHERE DATE\(t\.FollowupDate\) = \?/i';
                    $newContent = preg_replace($pattern, $newSelect, $content);
                    
                    if ($newContent !== $content) {
                        file_put_contents($dailyApiPath, $newContent);
                        echo "<p class='text-success'>‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï api/tasks/daily.php</p>";
                    } else {
                        echo "<p class='text-warning'>‚ö†Ô∏è api/tasks/daily.php ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á</p>";
                    }
                } else {
                    echo "<p class='text-danger'>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå api/tasks/daily.php</p>";
                }
                break;
        }
        
        echo "</div>";
        echo "</div>";
        
        // Refresh page after 3 seconds
        echo "<meta http-equiv='refresh' content='3'>";
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    echo "<div class='fix-card step'>";
    echo "<div class='p-4'>";
    echo "<h3>üìã ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤</h3>";
    
    echo "<div class='row'>";
    
    // Step 1
    echo "<div class='col-md-6 mb-3'>";
    echo "<div class='card'>";
    echo "<div class='card-body'>";
    echo "<h6>üîß ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå</h6>";
    echo "<p class='small text-muted'>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå AssignDate, ReceivedDate, CartStatusDate</p>";
    echo "<form method='post'>";
    echo "<input type='hidden' name='step' value='add_columns'>";
    echo "<button type='submit' name='execute_fix' class='btn btn-primary btn-sm'>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå</button>";
    echo "</form>";
    echo "</div>";
    echo "</div>";
    echo "</div>";
    
    // Step 2
    echo "<div class='col-md-6 mb-3'>";
    echo "<div class='card'>";
    echo "<div class='card-body'>";
    echo "<h6>üìÖ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</h6>";
    echo "<p class='small text-muted'>‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>";
    echo "<form method='post'>";
    echo "<input type='hidden' name='step' value='populate_dates'>";
    echo "<button type='submit' name='execute_fix' class='btn btn-warning btn-sm'>‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</button>";
    echo "</form>";
    echo "</div>";
    echo "</div>";
    echo "</div>";
    
    // Step 3
    echo "<div class='col-md-6 mb-3'>";
    echo "<div class='card'>";
    echo "<div class='card-body'>";
    echo "<h6>üîÑ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 3: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Business Logic</h6>";
    echo "<p class='small text-muted'>‡∏õ‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏é‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à</p>";
    echo "<form method='post'>";
    echo "<input type='hidden' name='step' value='fix_status_logic'>";
    echo "<button type='submit' name='execute_fix' class='btn btn-success btn-sm'>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</button>";
    echo "</form>";
    echo "</div>";
    echo "</div>";
    echo "</div>";
    
    // Step 4
    echo "<div class='col-md-6 mb-3'>";
    echo "<div class='card'>";
    echo "<div class='card-body'>";
    echo "<h6>üîÑ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 4: ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï API</h6>";
    echo "<p class='small text-muted'>‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï API ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏´‡∏°‡πà</p>";
    echo "<form method='post'>";
    echo "<input type='hidden' name='step' value='update_apis'>";
    echo "<button type='submit' name='execute_fix' class='btn btn-info btn-sm'>‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï API</button>";
    echo "</form>";
    echo "</div>";
    echo "</div>";
    echo "</div>";
    
    echo "</div>";
    echo "</div>";
    echo "</div>";
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    echo "<div class='fix-card warning'>";
    echo "<div class='p-4'>";
    echo "<h3>üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h3>";
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
    $stmt = $pdo->query("DESCRIBE customers");
    $columns = $stmt->fetchAll(PDO::FETCH_COLUMN);
    
    $hasAssignDate = in_array('AssignDate', $columns);
    $hasReceivedDate = in_array('ReceivedDate', $columns);
    $hasCartStatusDate = in_array('CartStatusDate', $columns);
    
    echo "<h6>üîç ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô:</h6>";
    echo "<ul>";
    echo "<li>AssignDate: " . ($hasAssignDate ? "<span class='text-success'>‚úÖ ‡∏°‡∏µ</span>" : "<span class='text-danger'>‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ</span>") . "</li>";
    echo "<li>ReceivedDate: " . ($hasReceivedDate ? "<span class='text-success'>‚úÖ ‡∏°‡∏µ</span>" : "<span class='text-danger'>‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ</span>") . "</li>";
    echo "<li>CartStatusDate: " . ($hasCartStatusDate ? "<span class='text-success'>‚úÖ ‡∏°‡∏µ</span>" : "<span class='text-danger'>‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ</span>") . "</li>";
    echo "</ul>";
    
    if ($hasAssignDate && $hasReceivedDate) {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢
        $stmt = $pdo->query("SELECT 
                                COUNT(*) as total,
                                COUNT(AssignDate) as has_assign_date,
                                COUNT(ReceivedDate) as has_received_date
                             FROM customers");
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        echo "<h6>üìà ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:</h6>";
        echo "<ul>";
        echo "<li>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {$result['total']} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</li>";
        echo "<li>‡∏°‡∏µ AssignDate: {$result['has_assign_date']} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</li>";
        echo "<li>‡∏°‡∏µ ReceivedDate: {$result['has_received_date']} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</li>";
        echo "</ul>";
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤ Business Logic
        $stmt = $pdo->query("SELECT 
                                SUM(CASE WHEN CustomerStatus = '‡πÉ‡∏ô‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤' AND Sales IS NOT NULL AND Sales != '' THEN 1 ELSE 0 END) as basket_with_sales,
                                SUM(CASE WHEN CustomerStatus IN ('‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà', '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°') AND (Sales IS NULL OR Sales = '') THEN 1 ELSE 0 END) as customer_without_sales
                             FROM customers");
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        echo "<h6>‚ö†Ô∏è ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ Business Logic:</h6>";
        echo "<ul>";
        echo "<li>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ Sales: <span class='text-warning'>{$result['basket_with_sales']} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</span></li>";
        echo "<li>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà/‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ Sales: <span class='text-warning'>{$result['customer_without_sales']} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</span></li>";
        echo "</ul>";
    }
    
    echo "</div>";
    echo "</div>";
    
    // ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    echo "<div class='fix-card step'>";
    echo "<div class='p-4'>";
    echo "<h3>üìù ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</h3>";
    
    echo "<h6>üéØ ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:</h6>";
    echo "<ol>";
    echo "<li><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:</strong> ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ Sales ‡πÅ‡∏•‡∏∞‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ Sales</li>";
    echo "<li><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•':</strong> ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå AssignDate/ReceivedDate ‡∏ß‡πà‡∏≤‡∏á</li>";
    echo "<li><strong>‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠ '‡πÄ‡∏•‡∏¢ 91 ‡∏ß‡∏±‡∏ô':</strong> ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤‡∏•‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</li>";
    echo "</ol>";
    
    echo "<h6>üîß ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:</h6>";
    echo "<ol>";
    echo "<li>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô (AssignDate, ReceivedDate, CartStatusDate)</li>";
    echo "<li>‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢</li>";
    echo "<li>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Business Logic ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</li>";
    echo "<li>‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï API ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</li>";
    echo "</ol>";
    
    echo "<div class='alert alert-info mt-3'>";
    echo "<h6><i class='fas fa-info-circle'></i> ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</h6>";
    echo "<p class='mb-0'>‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô</p>";
    echo "</div>";
    
    echo "</div>";
    echo "</div>";
    
} catch (Exception $e) {
    echo "<div class='alert alert-danger'>";
    echo "<h4>‚ùå Database Error</h4>";
    echo "<p>" . htmlspecialchars($e->getMessage()) . "</p>";
    echo "</div>";
}

echo "<div class='text-center mt-4'>";
echo "<div class='btn-group'>";
echo "<button onclick='location.reload()' class='btn btn-secondary'>üîÑ Refresh</button>";
echo "<a href='diagnose_sales_data_issues.php' class='btn btn-info' target='_blank'>üîç Diagnose Issues</a>";
echo "</div>";
echo "</div>";

echo "</div>"; // container
echo "</body></html>";
?>