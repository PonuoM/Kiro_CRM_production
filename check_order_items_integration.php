<?php
/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô order_items ‡πÅ‡∏•‡∏∞ ProductsCode
 */

header('Content-Type: text/html; charset=utf-8');
require_once 'config/database.php';

echo "<h2>üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Order Items Integration</h2>";

try {
    $db = Database::getInstance();
    $pdo = $db->getConnection();
    
    echo "<h3>1Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á order_items</h3>";
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡∏≤‡∏£‡∏≤‡∏á order_items ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    $stmt = $pdo->query("SHOW TABLES LIKE 'order_items'");
    $orderItemsExists = $stmt->rowCount() > 0;
    
    if (!$orderItemsExists) {
        echo "<p style='color: red;'>‚ùå ‡∏ï‡∏≤‡∏£‡∏≤‡∏á order_items ‡πÑ‡∏°‡πà‡∏°‡∏µ</p>";
        echo "<p>üí° <strong>‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏:</strong> ‡∏£‡∏∞‡∏ö‡∏ö‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ implement ‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á order_items</p>";
        echo "<p>üìã <strong>‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:</strong> ‡∏£‡∏±‡∏ô SQL script ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á:</p>";
        echo "<code>mysql -u root -p crm_system < database_design_order_items.sql</code>";
    } else {
        echo "<p style='color: green;'>‚úÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á order_items ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà</p>";
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        $stmt = $pdo->query("DESCRIBE order_items");
        $columns = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        echo "<h4>‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á order_items:</h4>";
        echo "<table border='1' style='border-collapse: collapse;'>";
        echo "<tr><th>Field</th><th>Type</th><th>Key</th><th>Default</th><th>Comment</th></tr>";
        
        foreach ($columns as $column) {
            echo "<tr>";
            echo "<td>{$column['Field']}</td>";
            echo "<td>{$column['Type']}</td>";
            echo "<td>{$column['Key']}</td>";
            echo "<td>{$column['Default']}</td>";
            echo "<td>" . ($column['Comment'] ?? '') . "</td>";
            echo "</tr>";
        }
        echo "</table>";
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô order_items
        $stmt = $pdo->query("SELECT COUNT(*) as count FROM order_items");
        $count = $stmt->fetch(PDO::FETCH_ASSOC)['count'];
        
        echo "<p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô order_items:</strong> {$count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>";
        
        if ($count > 0) {
            // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 5 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
            echo "<h4>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 5 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:</h4>";
            $stmt = $pdo->query("
                SELECT DocumentNo, ProductCode, ProductName, UnitPrice, Quantity, LineTotal, CreatedDate
                FROM order_items 
                ORDER BY CreatedDate DESC 
                LIMIT 5
            ");
            $items = $stmt->fetchAll(PDO::FETCH_ASSOC);
            
            echo "<table border='1' style='border-collapse: collapse;'>";
            echo "<tr><th>DocumentNo</th><th>ProductCode</th><th>ProductName</th><th>UnitPrice</th><th>Qty</th><th>LineTotal</th><th>Date</th></tr>";
            
            foreach ($items as $item) {
                echo "<tr>";
                echo "<td>{$item['DocumentNo']}</td>";
                echo "<td>{$item['ProductCode']}</td>";
                echo "<td>{$item['ProductName']}</td>";
                echo "<td>" . number_format($item['UnitPrice'], 2) . "</td>";
                echo "<td>{$item['Quantity']}</td>";
                echo "<td>" . number_format($item['LineTotal'], 2) . "</td>";
                echo "<td>{$item['CreatedDate']}</td>";
                echo "</tr>";
            }
            echo "</table>";
        } else {
            echo "<p style='color: orange;'>‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô order_items</p>";
        }
    }
    
    echo "<h3>2Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ProductsCode ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</h3>";
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô orders ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    $stmt = $pdo->query("
        SELECT DocumentNo, CustomerCode, Products, ProductsDetail, CreatedDate
        FROM orders 
        ORDER BY CreatedDate DESC 
        LIMIT 5
    ");
    $orders = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    echo "<h4>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Products ‡πÉ‡∏ô orders ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:</h4>";
    echo "<table border='1' style='border-collapse: collapse;'>";
    echo "<tr><th>DocumentNo</th><th>Products</th><th>ProductsDetail (JSON)</th><th>Has ProductCode</th></tr>";
    
    foreach ($orders as $order) {
        echo "<tr>";
        echo "<td>{$order['DocumentNo']}</td>";
        echo "<td>" . htmlspecialchars($order['Products'] ?? '') . "</td>";
        
        $productsDetail = $order['ProductsDetail'];
        if ($productsDetail) {
            $products = json_decode($productsDetail, true);
            if ($products && is_array($products)) {
                echo "<td>";
                foreach ($products as $i => $product) {
                    echo ($i + 1) . ". " . htmlspecialchars($product['name'] ?? 'No name');
                    if (isset($product['code'])) {
                        echo " (Code: {$product['code']})";
                    }
                    echo "<br>";
                }
                echo "</td>";
                
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ ProductCode ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                $hasProductCode = false;
                foreach ($products as $product) {
                    if (!empty($product['code'])) {
                        $hasProductCode = true;
                        break;
                    }
                }
                echo "<td>" . ($hasProductCode ? "‚úÖ ‡∏°‡∏µ" : "‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ") . "</td>";
            } else {
                echo "<td>Invalid JSON</td>";
                echo "<td>‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ</td>";
            }
        } else {
            echo "<td>-</td>";
            echo "<td>‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ</td>";
        }
        echo "</tr>";
    }
    echo "</table>";
    
    echo "<h3>3Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á orders ‡πÅ‡∏•‡∏∞ order_items</h3>";
    
    if ($orderItemsExists) {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö orders ‡∏ó‡∏µ‡πà‡∏°‡∏µ order_items
        $stmt = $pdo->query("
            SELECT 
                o.DocumentNo,
                o.CustomerCode,
                o.SubtotalAmount,
                o.Subtotal_amount2,
                COUNT(oi.id) as ItemCount,
                SUM(oi.LineTotal) as ItemsTotal
            FROM orders o
            LEFT JOIN order_items oi ON o.DocumentNo = oi.DocumentNo
            WHERE o.CreatedDate >= DATE_SUB(NOW(), INTERVAL 7 DAY)
            GROUP BY o.DocumentNo
            ORDER BY o.CreatedDate DESC
            LIMIT 10
        ");
        
        $ordersWithItems = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        echo "<h4>Orders ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÅ‡∏•‡∏∞ order_items:</h4>";
        echo "<table border='1' style='border-collapse: collapse;'>";
        echo "<tr><th>DocumentNo</th><th>Customer</th><th>Subtotal</th><th>Subtotal2</th><th>Items Count</th><th>Items Total</th><th>Status</th></tr>";
        
        foreach ($ordersWithItems as $order) {
            echo "<tr>";
            echo "<td>{$order['DocumentNo']}</td>";
            echo "<td>{$order['CustomerCode']}</td>";
            echo "<td>" . number_format($order['SubtotalAmount'], 2) . "</td>";
            echo "<td>" . number_format($order['Subtotal_amount2'], 2) . "</td>";
            echo "<td>{$order['ItemCount']}</td>";
            echo "<td>" . number_format($order['ItemsTotal'], 2) . "</td>";
            
            if ($order['ItemCount'] == 0) {
                echo "<td style='color: red;'>‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ items</td>";
            } else {
                $totalDiff = abs($order['Subtotal_amount2'] - $order['ItemsTotal']);
                if ($totalDiff < 0.01) {
                    echo "<td style='color: green;'>‚úÖ ‡∏ï‡∏£‡∏á</td>";
                } else {
                    echo "<td style='color: orange;'>‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á</td>";
                }
            }
            echo "</tr>";
        }
        echo "</table>";
    }
    
    echo "<h3>4Ô∏è‚É£ ‡∏™‡∏£‡∏∏‡∏õ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏ö</h3>";
    
    $issues = [];
    
    if (!$orderItemsExists) {
        $issues[] = "‚ùå ‡∏ï‡∏≤‡∏£‡∏≤‡∏á order_items ‡πÑ‡∏°‡πà‡∏°‡∏µ - ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤";
    } else {
        $stmt = $pdo->query("SELECT COUNT(*) as count FROM order_items");
        $itemsCount = $stmt->fetch(PDO::FETCH_ASSOC)['count'];
        
        if ($itemsCount == 0) {
            $issues[] = "‚ö†Ô∏è ‡∏ï‡∏≤‡∏£‡∏≤‡∏á order_items ‡∏ß‡πà‡∏≤‡∏á - ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡πÉ‡∏ô order_items";
        }
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ProductsCode ‡πÉ‡∏ô Frontend
    $stmt = $pdo->query("
        SELECT COUNT(*) as total,
        COUNT(CASE WHEN ProductsDetail IS NOT NULL AND ProductsDetail != '' THEN 1 END) as with_detail
        FROM orders 
        WHERE CreatedDate >= DATE_SUB(NOW(), INTERVAL 7 DAY)
    ");
    $productStats = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($productStats['with_detail'] == 0) {
        $issues[] = "‚ùå ProductsDetail ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• - Frontend ‡πÑ‡∏°‡πà‡∏™‡πà‡∏á ProductsCode";
    }
    
    if (empty($issues)) {
        echo "<p style='color: green;'>‚úÖ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏£‡πâ‡∏≤‡∏¢‡πÅ‡∏£‡∏á</p>";
    } else {
        echo "<ul>";
        foreach ($issues as $issue) {
            echo "<li>$issue</li>";
        }
        echo "</ul>";
        
        echo "<h4>üí° ‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:</h4>";
        echo "<ol>";
        echo "<li><strong>‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á order_items:</strong> ‡∏£‡∏±‡∏ô database_design_order_items.sql</li>";
        echo "<li><strong>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç API create.php:</strong> ‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á order_items ‡∏î‡πâ‡∏ß‡∏¢</li>";
        echo "<li><strong>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Frontend:</strong> ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á ProductsCode ‡πÉ‡∏ô products array</li>";
        echo "<li><strong>‡∏ó‡∏î‡∏™‡∏≠‡∏ö:</strong> ‡∏™‡∏£‡πâ‡∏≤‡∏á order ‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•</li>";
        echo "</ol>";
    }
    
} catch (Exception $e) {
    echo "<p style='color: red;'>Error: " . $e->getMessage() . "</p>";
}
?>

<hr>
<h3>üìã ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</h3>
<p><strong>‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å:</strong></p>
<ul>
<li>‡∏£‡∏∞‡∏ö‡∏ö‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ implement ‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á order_items</li>
<li>ProductsCode ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏à‡∏≤‡∏Å Frontend</li>
<li>‡∏Ç‡∏≤‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á orders (header) ‡πÅ‡∏•‡∏∞ order_items (detail)</li>
</ul>

<p><strong>‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö:</strong></p>
<ul>
<li>‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ report ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏¥‡πâ‡∏ô‡πÑ‡∏î‡πâ</li>
<li>‡πÑ‡∏°‡πà‡∏°‡∏µ ProductsCode ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á</li>
<li>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ï‡∏≤‡∏° Database Normalization</li>
</ul>