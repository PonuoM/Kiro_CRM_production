<?php
// fix_production_data.php
// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö Business Logic ‡∏â‡∏ö‡∏±‡∏ö Production
// ‡∏£‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô - ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà script ‡∏õ‡∏£‡∏∞‡∏à‡∏≥

session_start();

// Enhanced auth check
if (!isset($_SESSION['user_login']) || $_SESSION['user_role'] !== 'admin') {
    die("Access denied. Admin only.");
}

echo "<!DOCTYPE html><html><head><meta charset='UTF-8'><title>üîß Production Data Fix</title>";
echo "<link href='https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css' rel='stylesheet'>";
echo "<style>
body{font-family:Arial,sans-serif;padding:20px;background:#f8f9fa;} 
.fix-card{margin:20px 0;border-radius:12px;box-shadow:0 2px 8px rgba(0,0,0,0.1);} 
.preview{border-left:4px solid #17a2b8;background:linear-gradient(135deg,#e1f5fe,#f0f9ff);} 
.execute{border-left:4px solid #28a745;background:linear-gradient(135deg,#e8f5e9,#f1f8e9);} 
.warning{border-left:4px solid #ffc107;background:linear-gradient(135deg,#fff8e1,#fffbf0);} 
.danger{border-left:4px solid #dc3545;background:linear-gradient(135deg,#ffebee,#fff5f5);} 
.step-header{background:linear-gradient(135deg,#1976d2,#42a5f5);color:white;border-radius:8px 8px 0 0;padding:15px 20px;margin:-15px -20px 15px -20px;}
.metric{background:white;border-radius:8px;padding:12px;margin:8px 0;border-left:3px solid #ddd;}
.metric.success{border-left-color:#28a745;} .metric.warning{border-left-color:#ffc107;} .metric.danger{border-left-color:#dc3545;}
pre{background:#2d3748;color:#e2e8f0;padding:15px;border-radius:8px;font-size:12px;max-height:300px;overflow:auto;}
.progress-ring{width:60px;height:60px;} .progress-ring circle{fill:none;stroke-width:6;transform:rotate(-90deg);transform-origin:50% 50%;}
.btn-group-custom{gap:10px;margin:15px 0;}
</style>";
echo "</head><body>";

echo "<div class='container-fluid'>";
echo "<div class='row'>";
echo "<div class='col-md-12'>";

echo "<div class='text-center mb-4'>";
echo "<h1 class='display-5 fw-bold text-primary'>üîß Production Data Fix</h1>";
echo "<p class='lead text-muted'>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö Business Logic</p>";
echo "</div>";

$executeMode = isset($_GET['execute']) && $_GET['execute'] === 'true';
$confirmCode = $_GET['confirm'] ?? '';
$validConfirmCode = "KIRO-FIX-" . date('Ymd');

if ($executeMode && $confirmCode !== $validConfirmCode) {
    echo "<div class='alert alert-danger'>";
    echo "<h4>üö® Invalid Confirmation Code</h4>";
    echo "<p>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏£‡∏´‡∏±‡∏™‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: <strong>$validConfirmCode</strong></p>";
    echo "<a href='?' class='btn btn-secondary'>‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ Preview Mode</a>";
    echo "</div>";
    echo "</div></div></div></body></html>";
    exit;
}

if (!$executeMode) {
    echo "<div class='alert alert-warning fix-card'>";
    echo "<div class='step-header'><h4><i class='fas fa-exclamation-triangle'></i> Preview Mode - ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏à‡∏£‡∏¥‡∏á</h4></div>";
    echo "<p class='mb-3'>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô</p>";
    echo "<div class='btn-group-custom d-flex'>";
    echo "<a href='?execute=true&confirm=$validConfirmCode' class='btn btn-danger btn-lg flex-fill'>";
    echo "<i class='fas fa-rocket'></i> Execute Production Fix";
    echo "</a>";
    echo "</div>";
    echo "<div class='alert alert-info mt-3'>";
    echo "<strong>‚ö†Ô∏è ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô:</strong> ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•<br>";
    echo "<strong>‡∏£‡∏´‡∏±‡∏™‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô:</strong> <code>$validConfirmCode</code>";
    echo "</div>";
    echo "</div>";
} else {
    echo "<div class='alert alert-success fix-card'>";
    echo "<div class='step-header'><h4><i class='fas fa-cogs'></i> Execute Mode - ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á</h4></div>";
    echo "<p>‡∏£‡∏´‡∏±‡∏™‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô: <code>$confirmCode</code> ‚úÖ</p>";
    echo "</div>";
}

try {
    require_once 'config/database.php';
    $pdo = new PDO($dsn, $username, $password, $options);
    
    if ($executeMode) {
        $pdo->beginTransaction();
        $startTime = microtime(true);
    }
    
    // Summary Statistics First
    echo "<div class='fix-card warning'>";
    echo "<div class='step-header'><h3><i class='fas fa-chart-bar'></i> Current Data Analysis</h3></div>";
    
    $issues = [
        'basket_with_sales' => [
            'name' => '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ Sales',
            'query' => "SELECT COUNT(*) FROM customers WHERE CustomerStatus = '‡πÉ‡∏ô‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤' AND Sales IS NOT NULL",
            'severity' => 'danger'
        ],
        'new_without_sales' => [
            'name' => '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ Sales',
            'query' => "SELECT COUNT(*) FROM customers WHERE CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà' AND Sales IS NULL",
            'severity' => 'warning'
        ],
        'new_overdue_30' => [
            'name' => '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏•‡∏¢‡πÄ‡∏ß‡∏•‡∏≤ 30+ ‡∏ß‡∏±‡∏ô',
            'query' => "SELECT COUNT(*) FROM customers WHERE CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà' AND DATEDIFF(CURDATE(), COALESCE(AssignDate, CreatedDate)) > 30",
            'severity' => 'danger'
        ],
        'follow_overdue_14' => [
            'name' => '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÄ‡∏•‡∏¢‡πÄ‡∏ß‡∏•‡∏≤ 14+ ‡∏ß‡∏±‡∏ô',
            'query' => "SELECT COUNT(*) FROM customers WHERE CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°' AND LastContactDate IS NOT NULL AND DATEDIFF(CURDATE(), LastContactDate) > 14",
            'severity' => 'warning'
        ],
        'old_overdue_90' => [
            'name' => '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤‡πÄ‡∏•‡∏¢‡πÄ‡∏ß‡∏•‡∏≤ 90+ ‡∏ß‡∏±‡∏ô',
            'query' => "SELECT COUNT(*) FROM customers WHERE CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤' AND LastContactDate IS NOT NULL AND DATEDIFF(CURDATE(), LastContactDate) > 90",
            'severity' => 'warning'
        ],
        'invalid_temp' => [
            'name' => 'Temperature ‡πÑ‡∏°‡πà‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á',
            'query' => "SELECT COUNT(*) FROM customers WHERE (CustomerTemperature = 'HOT' AND COALESCE(DATEDIFF(CURDATE(), LastContactDate), 999) > 7) OR (CustomerTemperature = 'FROZEN' AND Sales IS NOT NULL AND CustomerStatus != '‡πÉ‡∏ô‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤')",
            'severity' => 'warning'
        ]
    ];
    
    echo "<div class='row'>";
    $totalIssues = 0;
    foreach ($issues as $key => $issue) {
        $stmt = $pdo->prepare($issue['query']);
        $stmt->execute();
        $count = $stmt->fetchColumn();
        $totalIssues += $count;
        
        $metricClass = $count > 0 ? $issue['severity'] : 'success';
        
        echo "<div class='col-md-4 mb-3'>";
        echo "<div class='metric $metricClass'>";
        echo "<h6 class='mb-1'>{$issue['name']}</h6>";
        echo "<h4 class='mb-0'>$count ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</h4>";
        echo "</div>";
        echo "</div>";
    }
    echo "</div>";
    
    echo "<div class='alert " . ($totalIssues > 0 ? 'alert-danger' : 'alert-success') . "'>";
    echo "<h5><i class='fas fa-exclamation-circle'></i> ‡∏£‡∏ß‡∏°‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: <strong>$totalIssues</strong> ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</h5>";
    echo "</div>";
    
    echo "</div>";
    
    // Fix 1: ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ Sales
    echo "<div class='fix-card " . ($executeMode ? 'execute' : 'preview') . "'>";
    echo "<div class='step-header'><h3><i class='fas fa-shopping-basket'></i> Fix 1: ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ Sales</h3></div>";
    
    $sql = "SELECT CustomerCode, CustomerName, Sales, AssignDate FROM customers WHERE CustomerStatus = '‡πÉ‡∏ô‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤' AND Sales IS NOT NULL LIMIT 20";
    $stmt = $pdo->prepare($sql);
    $stmt->execute();
    $basketWithSales = $stmt->fetchAll();
    
    if ($basketWithSales) {
        echo "<div class='alert alert-info'>";
        echo "<strong>Logic:</strong> ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤ = ‡πÑ‡∏°‡πà‡∏°‡∏µ Sales ‡∏î‡∏π‡πÅ‡∏• ‚Üí ‡∏•‡∏ö Sales ‡∏≠‡∏≠‡∏Å";
        echo "</div>";
        
        echo "<div class='table-responsive'>";
        echo "<table class='table table-sm'>";
        echo "<thead class='table-dark'><tr><th>CustomerCode</th><th>CustomerName</th><th>Sales</th><th>AssignDate</th><th>Action</th></tr></thead><tbody>";
        
        foreach (array_slice($basketWithSales, 0, 10) as $row) {
            echo "<tr>";
            echo "<td><code>" . htmlspecialchars($row['CustomerCode']) . "</code></td>";
            echo "<td>" . htmlspecialchars($row['CustomerName']) . "</td>";
            echo "<td><span class='badge bg-warning'>" . htmlspecialchars($row['Sales']) . "</span></td>";
            echo "<td>" . ($row['AssignDate'] ? date('d/m/Y', strtotime($row['AssignDate'])) : '-') . "</td>";
            echo "<td><span class='badge bg-danger'>‡∏•‡∏ö Sales</span></td>";
            echo "</tr>";
        }
        echo "</tbody></table>";
        echo "</div>";
        
        if (count($basketWithSales) > 10) {
            echo "<div class='alert alert-secondary'>... ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å " . (count($basketWithSales) - 10) . " ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</div>";
        }
        
        if ($executeMode) {
            $updateSql = "UPDATE customers SET Sales = NULL WHERE CustomerStatus = '‡πÉ‡∏ô‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤' AND Sales IS NOT NULL";
            $stmt = $pdo->prepare($updateSql);
            $result = $stmt->execute();
            $affected = $stmt->rowCount();
            echo "<div class='alert alert-success'><i class='fas fa-check'></i> ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢: <strong>$affected</strong> ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</div>";
        }
    } else {
        echo "<div class='alert alert-success'><i class='fas fa-check-circle'></i> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤</div>";
    }
    
    echo "</div>";
    
    // Fix 2: ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ Sales
    echo "<div class='fix-card " . ($executeMode ? 'execute' : 'preview') . "'>";
    echo "<div class='step-header'><h3><i class='fas fa-user-plus'></i> Fix 2: ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ Sales</h3></div>";
    
    $sql = "SELECT CustomerCode, CustomerName, AssignDate, CreatedDate FROM customers WHERE CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà' AND Sales IS NULL LIMIT 15";
    $stmt = $pdo->prepare($sql);
    $stmt->execute();
    $newWithoutSales = $stmt->fetchAll();
    
    if ($newWithoutSales) {
        echo "<div class='alert alert-info'>";
        echo "<strong>Logic:</strong> ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ Sales ‚Üí ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤";
        echo "</div>";
        
        echo "<div class='table-responsive'>";
        echo "<table class='table table-sm'>";
        echo "<thead class='table-dark'><tr><th>CustomerCode</th><th>CustomerName</th><th>AssignDate</th><th>CreatedDate</th><th>Action</th></tr></thead><tbody>";
        
        foreach (array_slice($newWithoutSales, 0, 10) as $row) {
            echo "<tr>";
            echo "<td><code>" . htmlspecialchars($row['CustomerCode']) . "</code></td>";
            echo "<td>" . htmlspecialchars($row['CustomerName']) . "</td>";
            echo "<td>" . ($row['AssignDate'] ? date('d/m/Y', strtotime($row['AssignDate'])) : '-') . "</td>";
            echo "<td>" . ($row['CreatedDate'] ? date('d/m/Y', strtotime($row['CreatedDate'])) : '-') . "</td>";
            echo "<td><span class='badge bg-info'>‚Üí ‡πÉ‡∏ô‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤</span></td>";
            echo "</tr>";
        }
        echo "</tbody></table>";
        echo "</div>";
        
        if ($executeMode) {
            $updateSql = "UPDATE customers SET CustomerStatus = '‡πÉ‡∏ô‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤', AssignDate = NULL WHERE CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà' AND Sales IS NULL";
            $stmt = $pdo->prepare($updateSql);
            $result = $stmt->execute();
            $affected = $stmt->rowCount();
            echo "<div class='alert alert-success'><i class='fas fa-check'></i> ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤: <strong>$affected</strong> ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</div>";
        }
    } else {
        echo "<div class='alert alert-success'><i class='fas fa-check-circle'></i> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤</div>";
    }
    
    echo "</div>";
    
    // Fix 3: Auto-reassign ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏•‡∏¢‡πÄ‡∏ß‡∏•‡∏≤
    echo "<div class='fix-card " . ($executeMode ? 'execute' : 'preview') . "'>";
    echo "<div class='step-header'><h3><i class='fas fa-clock'></i> Fix 3: Auto-reassign ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏•‡∏¢‡πÄ‡∏ß‡∏•‡∏≤</h3></div>";
    
    echo "<div class='row'>";
    
    // New customers > 30 days
    echo "<div class='col-md-6'>";
    echo "<h5>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏•‡∏¢ 30 ‡∏ß‡∏±‡∏ô</h5>";
    $sql = "SELECT COUNT(*) FROM customers WHERE CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà' AND DATEDIFF(CURDATE(), COALESCE(AssignDate, CreatedDate)) > 30";
    $stmt = $pdo->prepare($sql);
    $stmt->execute();
    $overdueNew = $stmt->fetchColumn();
    
    if ($overdueNew > 0) {
        echo "<div class='metric danger'><h4>$overdueNew ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</h4><small>‚Üí ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤</small></div>";
        
        if ($executeMode) {
            $updateSql = "UPDATE customers SET CustomerStatus = '‡πÉ‡∏ô‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤', Sales = NULL, AssignDate = NULL WHERE CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà' AND DATEDIFF(CURDATE(), COALESCE(AssignDate, CreatedDate)) > 30";
            $stmt = $pdo->prepare($updateSql);
            $stmt->execute();
            $affected = $stmt->rowCount();
            echo "<div class='alert alert-success'>‚úÖ ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤: $affected ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</div>";
        }
    } else {
        echo "<div class='metric success'><h4>0 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</h4><small>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤</small></div>";
    }
    echo "</div>";
    
    // Follow customers > 14 days
    echo "<div class='col-md-6'>";
    echo "<h5>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÄ‡∏•‡∏¢ 14 ‡∏ß‡∏±‡∏ô</h5>";
    $sql = "SELECT COUNT(*) FROM customers WHERE CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°' AND LastContactDate IS NOT NULL AND DATEDIFF(CURDATE(), LastContactDate) > 14";
    $stmt = $pdo->prepare($sql);
    $stmt->execute();
    $overdueFollow = $stmt->fetchColumn();
    
    if ($overdueFollow > 0) {
        echo "<div class='metric warning'><h4>$overdueFollow ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</h4><small>‚Üí ‡∏õ‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</small></div>";
        
        if ($executeMode) {
            // > 30 days -> old customers
            $updateSql1 = "UPDATE customers SET CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤' WHERE CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°' AND LastContactDate IS NOT NULL AND DATEDIFF(CURDATE(), LastContactDate) > 30";
            $stmt = $pdo->prepare($updateSql1);
            $stmt->execute();
            $toOld = $stmt->rowCount();
            
            // 14-30 days -> basket
            $updateSql2 = "UPDATE customers SET CustomerStatus = '‡πÉ‡∏ô‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤', Sales = NULL, AssignDate = NULL WHERE CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°' AND LastContactDate IS NOT NULL AND DATEDIFF(CURDATE(), LastContactDate) BETWEEN 15 AND 30";
            $stmt = $pdo->prepare($updateSql2);
            $stmt->execute();
            $toBasket = $stmt->rowCount();
            
            echo "<div class='alert alert-success'>‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤: $toOld ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</div>";
            echo "<div class='alert alert-success'>‚úÖ ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤: $toBasket ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</div>";
        }
    } else {
        echo "<div class='metric success'><h4>0 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</h4><small>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤</small></div>";
    }
    echo "</div>";
    
    echo "</div>";
    echo "</div>";
    
    // Fix 4: Smart Grade/Temperature Reset
    echo "<div class='fix-card " . ($executeMode ? 'execute' : 'preview') . "'>";
    echo "<div class='step-header'><h3><i class='fas fa-thermometer-half'></i> Fix 4: Smart Grade/Temperature Reset</h3></div>";
    
    echo "<div class='alert alert-info'>";
    echo "<h6><i class='fas fa-brain'></i> Smart Logic:</h6>";
    echo "<ul class='mb-0'>";
    echo "<li><strong>Temperature:</strong> ‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (‚â§3=HOT, ‚â§7=WARM, ‚â§14=COLD, >14=FROZEN)</li>";
    echo "<li><strong>Grade:</strong> ‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏•‡∏∞ Temperature (‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà+HOT/WARM=A, ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°+WARM/COLD=B, ‡πÄ‡∏Å‡πà‡∏≤=C, ‡∏≠‡∏∑‡πà‡∏ô‡πÜ=D)</li>";
    echo "</ul>";
    echo "</div>";
    
    if ($executeMode) {
        // Update Temperature
        $tempUpdateSql = "UPDATE customers SET 
            CustomerTemperature = CASE 
                WHEN Sales IS NULL OR CustomerStatus = '‡πÉ‡∏ô‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤' THEN 'FROZEN'
                WHEN LastContactDate IS NULL OR DATEDIFF(CURDATE(), LastContactDate) > 30 THEN 'FROZEN'
                WHEN DATEDIFF(CURDATE(), LastContactDate) <= 3 THEN 'HOT'
                WHEN DATEDIFF(CURDATE(), LastContactDate) <= 7 THEN 'WARM'
                WHEN DATEDIFF(CURDATE(), LastContactDate) <= 14 THEN 'COLD'
                ELSE 'FROZEN'
            END";
        
        $stmt = $pdo->prepare($tempUpdateSql);
        $stmt->execute();
        $tempUpdated = $stmt->rowCount();
        
        // Update Grade
        $gradeUpdateSql = "UPDATE customers SET 
            CustomerGrade = CASE 
                WHEN CustomerStatus = '‡πÉ‡∏ô‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤' OR CustomerTemperature = 'FROZEN' THEN 'D'
                WHEN CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà' AND CustomerTemperature IN ('HOT', 'WARM') THEN 'A'
                WHEN CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°' AND CustomerTemperature IN ('WARM', 'COLD') THEN 'B'
                WHEN CustomerStatus = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤' THEN 'C'
                ELSE 'D'
            END";
        
        $stmt = $pdo->prepare($gradeUpdateSql);
        $stmt->execute();
        $gradeUpdated = $stmt->rowCount();
        
        echo "<div class='row'>";
        echo "<div class='col-md-6'>";
        echo "<div class='metric success'><h4>$tempUpdated</h4><small>Temperature Updated</small></div>";
        echo "</div>";
        echo "<div class='col-md-6'>";
        echo "<div class='metric success'><h4>$gradeUpdated</h4><small>Grade Updated</small></div>";
        echo "</div>";
        echo "</div>";
    } else {
        echo "<div class='alert alert-secondary'><i class='fas fa-info-circle'></i> ‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Temperature ‡πÅ‡∏•‡∏∞ Grade ‡∏ï‡∏≤‡∏° Smart Logic</div>";
    }
    
    echo "</div>";
    
    // Final Summary
    echo "<div class='fix-card execute'>";
    echo "<div class='step-header'><h3><i class='fas fa-chart-line'></i> Summary & Results</h3></div>";
    
    if ($executeMode) {
        $endTime = microtime(true);
        $executionTime = round(($endTime - $startTime) * 1000, 2);
        
        $pdo->commit();
        
        echo "<div class='alert alert-success'>";
        echo "<h4><i class='fas fa-check-circle'></i> Production Fix ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå!</h4>";
        echo "<p>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö Business Logic</p>";
        echo "<small class='text-muted'>Execution time: {$executionTime}ms</small>";
        echo "</div>";
        
        // Log the activity
        $logSql = "INSERT INTO system_logs (log_type, message, created_at) VALUES (?, ?, NOW())";
        $stmt = $pdo->prepare($logSql);
        $stmt->execute(['production_fix', "Production data fix executed successfully in {$executionTime}ms"]);
        
        // Show updated stats
        echo "<h5>üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:</h5>";
        
        $postFixStats = [];
        foreach ($issues as $key => $issue) {
            $stmt = $pdo->prepare($issue['query']);
            $stmt->execute();
            $count = $stmt->fetchColumn();
            $postFixStats[$key] = $count;
        }
        
        echo "<div class='row'>";
        foreach ($issues as $key => $issue) {
            $count = $postFixStats[$key];
            $metricClass = $count > 0 ? 'warning' : 'success';
            
            echo "<div class='col-md-4 mb-3'>";
            echo "<div class='metric $metricClass'>";
            echo "<h6 class='mb-1'>{$issue['name']}</h6>";
            echo "<h4 class='mb-0'>$count ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</h4>";
            echo "</div>";
            echo "</div>";
        }
        echo "</div>";
        
        $totalRemainingIssues = array_sum($postFixStats);
        
        echo "<div class='alert alert-" . ($totalRemainingIssues > 0 ? 'warning' : 'success') . "'>";
        echo "<h5><i class='fas fa-info-circle'></i> ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: <strong>$totalRemainingIssues</strong> ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</h5>";
        if ($totalRemainingIssues > 0) {
            echo "<p>‡∏ö‡∏≤‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏¢‡∏π‡πà‡∏ô‡∏≠‡∏Å‡πÄ‡∏´‡∏ô‡∏∑‡∏≠ Business Logic</p>";
        }
        echo "</div>";
        
    } else {
        echo "<div class='alert alert-info'>";
        echo "<h5><i class='fas fa-eye'></i> Preview Mode</h5>";
        echo "<p>‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≤‡∏á‡∏ï‡πâ‡∏ô‡∏à‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î Execute</p>";
        echo "</div>";
    }
    
    echo "<div class='alert alert-warning'>";
    echo "<h6><i class='fas fa-lightbulb'></i> ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ:</h6>";
    echo "<ol class='mb-0'>";
    echo "<li>‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö Auto-reassign (Cron Job)</li>";
    echo "<li>‡∏ó‡∏î‡∏™‡∏≠‡∏ö Dashboard ‡πÉ‡∏´‡∏°‡πà</li>";
    echo "<li>‡πÅ‡∏à‡πâ‡∏á Sales ‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å Pool</li>";
    echo "<li>Monitor ‡∏£‡∏∞‡∏ö‡∏ö 1-2 ‡∏ß‡∏±‡∏ô</li>";
    echo "</ol>";
    echo "</div>";
    
    echo "</div>";
    
} catch (Exception $e) {
    if ($executeMode) {
        $pdo->rollback();
    }
    echo "<div class='alert alert-danger'>";
    echo "<h4><i class='fas fa-exclamation-triangle'></i> Error</h4>";
    echo "<p>" . htmlspecialchars($e->getMessage()) . "</p>";
    echo "<small class='text-muted'>File: " . $e->getFile() . " Line: " . $e->getLine() . "</small>";
    echo "</div>";
}

echo "</div>"; // col
echo "</div>"; // row
echo "</div>"; // container

echo "</body></html>";
?>