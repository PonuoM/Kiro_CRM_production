<?php
/**
 * Login 500 Error Diagnostic Tool
 * ‡∏£‡∏∞‡∏ö‡∏∏‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á 500 Internal Server Error
 */

error_reporting(E_ALL);
ini_set('display_errors', 1);

echo "<!DOCTYPE html>\n<html><head><meta charset='UTF-8'><title>üîß Login 500 Diagnostic</title>";
echo "<link href='https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css' rel='stylesheet'>";
echo "</head><body style='padding:20px;'>";

echo "<h1>üîß Login 500 Error Diagnostic</h1>";
echo "<p>‡∏£‡∏∞‡∏ö‡∏∏‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á 500 Internal Server Error ‡πÉ‡∏ô login API</p>";

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô session ‡πÉ‡∏´‡πâ‡∏û‡∏£‡πâ‡∏≠‡∏°
if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

echo "<div class='alert alert-info'>üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô...</div>";

$diagnostics = [];
$fatal_error = false;

// 1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö File Existence
echo "<h3>1. üìÅ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô</h3>";

$required_files = [
    'api/auth/login.php' => 'Login API Endpoint',
    'includes/functions.php' => 'Core Functions',
    'includes/User.php' => 'User Model',
    'includes/BaseModel.php' => 'Base Model',
    'config/database.php' => 'Database Config',
    'config/config.php' => 'Main Config'
];

foreach ($required_files as $file => $desc) {
    $exists = file_exists($file);
    $readable = $exists ? is_readable($file) : false;
    
    echo "<div class='alert " . ($exists && $readable ? 'alert-success' : 'alert-danger') . "'>";
    echo "<strong>$desc:</strong> $file ";
    
    if ($exists && $readable) {
        echo "‚úÖ OK";
        $diagnostics[$file] = 'OK';
    } else {
        echo "‚ùå " . (!$exists ? '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå' : '‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ');
        $diagnostics[$file] = 'FAILED';
        $fatal_error = true;
    }
    echo "</div>";
}

// 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Database Connection
echo "<h3>2. üóÑÔ∏è ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Database</h3>";

try {
    require_once 'config/database.php';
    $db = Database::getInstance();
    $pdo = $db->getConnection();
    
    echo "<div class='alert alert-success'>‚úÖ Database ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</div>";
    $diagnostics['database'] = 'OK';
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á users
    $users_exists = $pdo->query("SHOW TABLES LIKE 'users'")->rowCount() > 0;
    if ($users_exists) {
        echo "<div class='alert alert-success'>‚úÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á users ‡∏û‡∏ö</div>";
        $diagnostics['users_table'] = 'OK';
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö structure
        $columns = $pdo->query("DESCRIBE users")->fetchAll(PDO::FETCH_COLUMN);
        $required_columns = ['id', 'Username', 'Password', 'Role', 'Status'];
        $missing_columns = array_diff($required_columns, $columns);
        
        if (empty($missing_columns)) {
            echo "<div class='alert alert-success'>‚úÖ ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á users ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</div>";
            $diagnostics['users_structure'] = 'OK';
        } else {
            echo "<div class='alert alert-danger'>‚ùå ‡∏Ç‡∏≤‡∏î‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå: " . implode(', ', $missing_columns) . "</div>";
            $diagnostics['users_structure'] = 'FAILED - Missing: ' . implode(', ', $missing_columns);
            $fatal_error = true;
        }
    } else {
        echo "<div class='alert alert-danger'>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á users</div>";
        $diagnostics['users_table'] = 'FAILED';
        $fatal_error = true;
    }
    
} catch (Exception $e) {
    echo "<div class='alert alert-danger'>‚ùå Database Error: " . $e->getMessage() . "</div>";
    $diagnostics['database'] = 'FAILED: ' . $e->getMessage();
    $fatal_error = true;
}

// 3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Functions Loading
echo "<h3>3. ‚öôÔ∏è ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Functions</h3>";

try {
    require_once 'includes/functions.php';
    echo "<div class='alert alert-success'>‚úÖ functions.php ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</div>";
    $diagnostics['functions'] = 'OK';
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö required functions
    $required_functions = ['sendJsonResponse', 'verifyCSRFToken', 'setUserSession', 'logActivity', 'verifyPassword'];
    $missing_functions = [];
    
    foreach ($required_functions as $func) {
        if (!function_exists($func)) {
            $missing_functions[] = $func;
        }
    }
    
    if (empty($missing_functions)) {
        echo "<div class='alert alert-success'>‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô</div>";
        $diagnostics['required_functions'] = 'OK';
    } else {
        echo "<div class='alert alert-danger'>‚ùå ‡∏Ç‡∏≤‡∏î‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô: " . implode(', ', $missing_functions) . "</div>";
        $diagnostics['required_functions'] = 'FAILED - Missing: ' . implode(', ', $missing_functions);
        $fatal_error = true;
    }
    
} catch (Exception $e) {
    echo "<div class='alert alert-danger'>‚ùå Functions Error: " . $e->getMessage() . "</div>";
    $diagnostics['functions'] = 'FAILED: ' . $e->getMessage();
    $fatal_error = true;
}

// 4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö User Model
echo "<h3>4. üë§ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö User Model</h3>";

try {
    require_once 'includes/User.php';
    $userModel = new User();
    echo "<div class='alert alert-success'>‚úÖ User Model ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</div>";
    $diagnostics['user_model'] = 'OK';
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö method ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
    if (method_exists($userModel, 'authenticate')) {
        echo "<div class='alert alert-success'>‚úÖ Method authenticate() ‡∏û‡∏ö</div>";
        $diagnostics['authenticate_method'] = 'OK';
    } else {
        echo "<div class='alert alert-danger'>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö method authenticate()</div>";
        $diagnostics['authenticate_method'] = 'FAILED';
        $fatal_error = true;
    }
    
} catch (Exception $e) {
    echo "<div class='alert alert-danger'>‚ùå User Model Error: " . $e->getMessage() . "</div>";
    $diagnostics['user_model'] = 'FAILED: ' . $e->getMessage();
    $fatal_error = true;
}

// 5. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API Simulation
echo "<h3>5. üß™ ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API</h3>";

if (!$fatal_error) {
    try {
        // ‡∏à‡∏≥‡∏•‡∏≠‡∏á JSON input
        $test_input = [
            'username' => 'test_user',
            'password' => 'test_pass',
            'csrf_token' => 'test_token'
        ];
        
        echo "<div class='alert alert-info'>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• JSON...</div>";
        
        // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö JSON encoding/decoding
        $json_string = json_encode($test_input);
        $decoded = json_decode($json_string, true);
        
        if ($decoded && is_array($decoded)) {
            echo "<div class='alert alert-success'>‚úÖ JSON processing ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ</div>";
            $diagnostics['json_processing'] = 'OK';
        } else {
            echo "<div class='alert alert-danger'>‚ùå JSON processing ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤</div>";
            $diagnostics['json_processing'] = 'FAILED';
        }
        
        // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö session
        $_SESSION['csrf_token'] = 'test_session_token';
        if (session_id()) {
            echo "<div class='alert alert-success'>‚úÖ Session ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ</div>";
            $diagnostics['session'] = 'OK';
        } else {
            echo "<div class='alert alert-warning'>‚ö†Ô∏è Session ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤</div>";
            $diagnostics['session'] = 'WARNING';
        }
        
    } catch (Exception $e) {
        echo "<div class='alert alert-danger'>‚ùå API Simulation Error: " . $e->getMessage() . "</div>";
        $diagnostics['api_simulation'] = 'FAILED: ' . $e->getMessage();
    }
} else {
    echo "<div class='alert alert-warning'>‚ö†Ô∏è ‡∏Ç‡πâ‡∏≤‡∏° API simulation ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏µ fatal error</div>";
    $diagnostics['api_simulation'] = 'SKIPPED';
}

// 6. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Error Reporting ‡πÉ‡∏ô API
echo "<h3>6. üö® ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Error Handling</h3>";

try {
    // ‡∏≠‡πà‡∏≤‡∏ô login.php ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö error handling
    $login_content = file_get_contents('api/auth/login.php');
    
    if (strpos($login_content, 'ini_set(\'display_errors\', 0)') !== false) {
        echo "<div class='alert alert-warning'>‚ö†Ô∏è API ‡∏õ‡∏¥‡∏î error display - ‡∏≠‡∏≤‡∏à‡∏ã‡πà‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</div>";
        $diagnostics['error_display'] = 'DISABLED';
    } else {
        echo "<div class='alert alert-info'>‚ÑπÔ∏è Error display ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏õ‡∏¥‡∏î</div>";
        $diagnostics['error_display'] = 'ENABLED';
    }
    
    if (strpos($login_content, 'ob_start()') !== false) {
        echo "<div class='alert alert-info'>‚ÑπÔ∏è API ‡πÉ‡∏ä‡πâ output buffering</div>";
        $diagnostics['output_buffering'] = 'YES';
    } else {
        echo "<div class='alert alert-warning'>‚ö†Ô∏è API ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ output buffering</div>";
        $diagnostics['output_buffering'] = 'NO';
    }
    
} catch (Exception $e) {
    echo "<div class='alert alert-danger'>‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô login.php: " . $e->getMessage() . "</div>";
    $diagnostics['login_file_read'] = 'FAILED';
}

// 7. ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•
echo "<h3>7. üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢</h3>";

$all_ok = true;
$warnings = 0;
$errors = 0;

foreach ($diagnostics as $test => $result) {
    if (strpos($result, 'FAILED') !== false) {
        $errors++;
        $all_ok = false;
    } elseif (strpos($result, 'WARNING') !== false || strpos($result, 'DISABLED') !== false) {
        $warnings++;
    }
}

echo "<div class='row'>";
echo "<div class='col-md-4'>";
echo "<div class='card text-center " . ($errors == 0 ? 'bg-success' : 'bg-danger') . " text-white'>";
echo "<div class='card-body'>";
echo "<h5>Errors</h5>";
echo "<div class='display-6'>$errors</div>";
echo "</div>";
echo "</div>";
echo "</div>";

echo "<div class='col-md-4'>";
echo "<div class='card text-center bg-warning text-dark'>";
echo "<div class='card-body'>";
echo "<h5>Warnings</h5>";
echo "<div class='display-6'>$warnings</div>";
echo "</div>";
echo "</div>";
echo "</div>";

echo "<div class='col-md-4'>";
echo "<div class='card text-center " . ($all_ok ? 'bg-success' : 'bg-secondary') . " text-white'>";
echo "<div class='card-body'>";
echo "<h5>Status</h5>";
echo "<div class='display-6'>" . ($all_ok ? '‚úÖ' : '‚ùå') . "</div>";
echo "</div>";
echo "</div>";
echo "</div>";

echo "</div>";

// 8. ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
echo "<h3>8. üí° ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</h3>";

if ($errors > 0) {
    echo "<div class='alert alert-danger'>";
    echo "<h5>üö® ‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏£‡πâ‡∏≤‡∏¢‡πÅ‡∏£‡∏á - ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡πà‡∏≠‡∏ô:</h5>";
    echo "<ul>";
    foreach ($diagnostics as $test => $result) {
        if (strpos($result, 'FAILED') !== false) {
            echo "<li><strong>$test:</strong> $result</li>";
        }
    }
    echo "</ul>";
    echo "</div>";
} else {
    echo "<div class='alert alert-success'>‚úÖ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏£‡πâ‡∏≤‡∏¢‡πÅ‡∏£‡∏á - API ‡∏ô‡πà‡∏≤‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ</div>";
}

if ($warnings > 0) {
    echo "<div class='alert alert-warning'>";
    echo "<h5>‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á:</h5>";
    echo "<ul>";
    foreach ($diagnostics as $test => $result) {
        if (strpos($result, 'WARNING') !== false || strpos($result, 'DISABLED') !== false) {
            echo "<li><strong>$test:</strong> $result</li>";
        }
    }
    echo "</ul>";
    echo "</div>";
}

// 9. ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
echo "<h3>9. üî¨ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h3>";

if ($errors == 0) {
    echo "<div class='alert alert-info'>";
    echo "<h5>üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API ‡πÅ‡∏ö‡∏ö Manual:</h5>";
    echo "<ol>";
    echo "<li><strong>‡πÄ‡∏õ‡∏¥‡∏î Developer Tools</strong> ‡πÉ‡∏ô browser (F12)</li>";
    echo "<li><strong>‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πá‡∏ö Network</strong></li>";
    echo "<li><strong>‡∏•‡∏≠‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô</strong> ‡∏ú‡πà‡∏≤‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏õ‡∏Å‡∏ï‡∏¥</li>";
    echo "<li><strong>‡∏î‡∏π‡πÉ‡∏ô Network tab</strong> ‡∏ß‡πà‡∏≤ API ‡∏™‡πà‡∏á‡∏≠‡∏∞‡πÑ‡∏£‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤</li>";
    echo "<li><strong>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Response</strong> ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô JSON ‡∏´‡∏£‡∏∑‡∏≠ HTML error</li>";
    echo "</ol>";
    echo "</div>";
    
    echo "<div class='alert alert-success'>";
    echo "<h5>‚úÖ ‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠:</h5>";
    echo "<p><a href='test_simple_login.php' class='btn btn-primary' target='_blank'>üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Login ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢</a></p>";
    echo "</div>";
}

echo "<div class='text-center mt-4'>";
echo "<h4>üìã ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢:</h4>";
echo "<table class='table table-sm table-bordered'>";
echo "<thead><tr><th>Component</th><th>Status</th></tr></thead>";
echo "<tbody>";
foreach ($diagnostics as $test => $result) {
    $class = 'table-success';
    if (strpos($result, 'FAILED') !== false) $class = 'table-danger';
    elseif (strpos($result, 'WARNING') !== false || strpos($result, 'DISABLED') !== false) $class = 'table-warning';
    
    echo "<tr class='$class'><td>$test</td><td>$result</td></tr>";
}
echo "</tbody></table>";
echo "</div>";

echo "</body></html>";
?>