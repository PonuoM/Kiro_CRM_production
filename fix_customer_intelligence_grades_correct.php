<?php
/**
 * Fix Customer Intelligence Grades - Correct Logic
 * ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Grade calculation ‡∏î‡πâ‡∏ß‡∏¢ logic ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
 * ‡πÉ‡∏ä‡πâ SUM(Price) ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ Price = ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß
 */

require_once 'config/database.php';

header('Content-Type: text/html; charset=utf-8');

try {
    $db = Database::getInstance();
    $pdo = $db->getConnection();
    
    echo "<h2>üîß ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Customer Intelligence Grades (Correct Logic)</h2>\n";
    echo "<p><strong>Logic ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:</strong> Price = ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á √ó Quantity)</p>\n";
    echo "<p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£...</p>\n";
    flush();
    
    // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• CUST003 ‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    echo "<h3>1. ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• CUST003 ‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</h3>\n";
    
    $beforeSql = "SELECT CustomerCode, CustomerName, CustomerGrade, TotalPurchase, GradeCalculatedDate 
                  FROM customers WHERE CustomerCode = 'CUST003'";
    $beforeStmt = $pdo->prepare($beforeSql);
    $beforeStmt->execute();
    $before = $beforeStmt->fetch(PDO::FETCH_ASSOC);
    
    if ($before) {
        echo "<table border='1' style='border-collapse: collapse; margin: 10px 0;'>\n";
        echo "<tr><th>Field</th><th>Before</th></tr>\n";
        foreach ($before as $field => $value) {
            echo "<tr><td>{$field}</td><td>{$value}</td></tr>\n";
        }
        echo "</table>\n";
    }
    
    // 2. ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏≤‡∏Å orders
    echo "<h3>2. ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏≤‡∏Å orders</h3>\n";
    
    $calcSql = "SELECT 
                    CustomerCode,
                    COUNT(*) as total_orders,
                    SUM(Price) as sum_price,
                    SUM(SubtotalAmount) as sum_subtotal,
                    SUM(Subtotal_amount2) as sum_subtotal2
                FROM orders 
                WHERE CustomerCode = 'CUST003'
                GROUP BY CustomerCode";
    
    $calcStmt = $pdo->prepare($calcSql);
    $calcStmt->execute();
    $calc = $calcStmt->fetch(PDO::FETCH_ASSOC);
    
    if ($calc) {
        echo "<table border='1' style='border-collapse: collapse; margin: 10px 0;'>\n";
        echo "<tr><th>Calculation Method</th><th>Amount</th><th>Recommendation</th></tr>\n";
        echo "<tr><td>SUM(Price)</td><td>‡∏ø" . number_format($calc['sum_price'], 2) . "</td><td>‚úÖ <strong>‡πÉ‡∏ä‡πâ‡∏ô‡∏µ‡πâ</strong> (‡∏¢‡∏≠‡∏î‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î)</td></tr>\n";
        echo "<tr><td>SUM(SubtotalAmount)</td><td>‡∏ø" . number_format($calc['sum_subtotal'], 2) . "</td><td>‚ö†Ô∏è ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö (‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡∏¢‡∏≠‡∏î‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô)</td></tr>\n";
        echo "<tr><td>SUM(Subtotal_amount2)</td><td>‡∏ø" . number_format($calc['sum_subtotal2'], 2) . "</td><td>‚ùå ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö (‡∏ö‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô 0)</td></tr>\n";
        echo "<tr><td>Total Orders</td><td>{$calc['total_orders']} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</td><td>‚ÑπÔ∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á</td></tr>\n";
        echo "</table>\n";
        
        // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ
        $correctAmount = $calc['sum_price']; // ‡πÉ‡∏ä‡πâ SUM(Price)
        $expectedGrade = 'D';
        if ($correctAmount >= 10000) $expectedGrade = 'A';
        elseif ($correctAmount >= 5000) $expectedGrade = 'B';
        elseif ($correctAmount >= 2000) $expectedGrade = 'C';
        
        echo "<div style='background: #d4edda; padding: 15px; border-radius: 5px; margin: 10px 0;'>\n";
        echo "<p><strong>üí° ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:</strong></p>\n";
        echo "<p>‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ: <strong>‡∏ø" . number_format($correctAmount, 2) . "</strong> (‡∏à‡∏≤‡∏Å SUM(Price))</p>\n";
        echo "<p>Grade ‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡πÑ‡∏î‡πâ: <strong>{$expectedGrade}</strong></p>\n";
        echo "</div>\n";
    }
    flush();
    
    // 3. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï TotalPurchase ‡∏î‡πâ‡∏ß‡∏¢ SUM(Price)
    echo "<h3>3. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï TotalPurchase ‡∏î‡πâ‡∏ß‡∏¢ SUM(Price)</h3>\n";
    
    $updateSql = "
        UPDATE customers c
        SET TotalPurchase = COALESCE((
                SELECT SUM(Price) 
                FROM orders o 
                WHERE o.CustomerCode = c.CustomerCode
            ), 0),
            LastPurchaseDate = (
                SELECT MAX(DATE(DocumentDate)) 
                FROM orders o 
                WHERE o.CustomerCode = c.CustomerCode
            )
        WHERE c.CustomerCode IS NOT NULL
    ";
    
    try {
        $updateStmt = $pdo->prepare($updateSql);
        $updateStmt->execute();
        $affectedRows = $updateStmt->rowCount();
        
        echo "<p>‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï TotalPurchase ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {$affectedRows} ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</p>\n";
        flush();
    } catch (Exception $e) {
        echo "<p>‚ùå Error updating TotalPurchase: " . $e->getMessage() . "</p>\n";
        throw $e;
    }
    
    // 4. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Grade ‡∏ó‡∏∏‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
    echo "<h3>4. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Customer Grade</h3>\n";
    
    $gradeUpdateSql = "
        UPDATE customers 
        SET 
            CustomerGrade = CASE 
                WHEN TotalPurchase >= 10000 THEN 'A'
                WHEN TotalPurchase >= 5000 THEN 'B'
                WHEN TotalPurchase >= 2000 THEN 'C'
                ELSE 'D'
            END,
            GradeCalculatedDate = NOW()
        WHERE CustomerCode IS NOT NULL
    ";
    
    try {
        $gradeStmt = $pdo->prepare($gradeUpdateSql);
        $gradeStmt->execute();
        $gradeRows = $gradeStmt->rowCount();
        
        echo "<p>‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Grade ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {$gradeRows} ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</p>\n";
        flush();
    } catch (Exception $e) {
        echo "<p>‚ùå Error updating grades: " . $e->getMessage() . "</p>\n";
        throw $e;
    }
    
    // 5. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö CUST003 ‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    echo "<h3>5. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö CUST003 ‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</h3>\n";
    
    $afterSql = "SELECT CustomerCode, CustomerName, CustomerGrade, TotalPurchase, GradeCalculatedDate, LastPurchaseDate 
                 FROM customers WHERE CustomerCode = 'CUST003'";
    $afterStmt = $pdo->prepare($afterSql);
    $afterStmt->execute();
    $after = $afterStmt->fetch(PDO::FETCH_ASSOC);
    
    if ($after) {
        echo "<table border='1' style='border-collapse: collapse; margin: 10px 0;'>\n";
        echo "<tr><th>Field</th><th>Before</th><th>After</th><th>Status</th></tr>\n";
        
        foreach ($after as $field => $afterValue) {
            $beforeValue = isset($before[$field]) ? $before[$field] : 'N/A';
            $status = '‚úÖ';
            
            if ($field === 'CustomerGrade') {
                if ($afterValue === 'A' && $after['TotalPurchase'] >= 10000) {
                    $status = 'üéâ <strong>CORRECT!</strong>';
                } elseif ($afterValue !== 'A' && $after['TotalPurchase'] >= 10000) {
                    $status = '‚ùå Should be A';
                } else {
                    $status = '‚úÖ';
                }
            }
            
            echo "<tr>";
            echo "<td>{$field}</td>";
            echo "<td>{$beforeValue}</td>";
            echo "<td>{$afterValue}</td>";
            echo "<td>{$status}</td>";
            echo "</tr>\n";
        }
        echo "</table>\n";
        
        // ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•
        if ($after['CustomerGrade'] === 'A' && $after['TotalPurchase'] >= 10000) {
            echo "<div style='background: #d4edda; padding: 20px; border-radius: 8px; margin: 15px 0; text-align: center;'>\n";
            echo "<h4 style='color: #155724; margin: 0 0 10px 0;'>üéâ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</h4>\n";
            echo "<p style='font-size: 1.2em; margin: 0;'>CUST003 ‡πÑ‡∏î‡πâ Grade A ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß!</p>\n";
            echo "<p style='margin: 10px 0 0 0;'>‡∏¢‡∏≠‡∏î‡∏ã‡∏∑‡πâ‡∏≠: <strong>‡∏ø" . number_format($after['TotalPurchase'], 2) . "</strong></p>\n";
            echo "</div>\n";
        } else {
            echo "<div style='background: #f8d7da; padding: 20px; border-radius: 8px; margin: 15px 0;'>\n";
            echo "<h4 style='color: #721c24;'>‚ùå ‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤</h4>\n";
            echo "<p>CUST003 ‡∏Ñ‡∏ß‡∏£‡πÑ‡∏î‡πâ Grade A ‡πÅ‡∏ï‡πà‡πÑ‡∏î‡πâ Grade {$after['CustomerGrade']}</p>\n";
            echo "</div>\n";
        }
    }
    flush();
    
    // 6. ‡πÅ‡∏™‡∏î‡∏á Grade Distribution
    echo "<h3>6. Grade Distribution ‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</h3>\n";
    
    $distSql = "SELECT CustomerGrade, COUNT(*) as count, 
                       MIN(TotalPurchase) as min_purchase,
                       MAX(TotalPurchase) as max_purchase,
                       AVG(TotalPurchase) as avg_purchase
                FROM customers 
                WHERE CustomerGrade IS NOT NULL
                GROUP BY CustomerGrade 
                ORDER BY CustomerGrade";
    
    $distStmt = $pdo->prepare($distSql);
    $distStmt->execute();
    $distribution = $distStmt->fetchAll(PDO::FETCH_ASSOC);
    
    echo "<table border='1' style='border-collapse: collapse; margin: 10px 0;'>\n";
    echo "<tr><th>Grade</th><th>Count</th><th>Min Purchase</th><th>Max Purchase</th><th>Avg Purchase</th><th>Logic Check</th></tr>\n";
    
    foreach ($distribution as $grade) {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö logic
        $logicCheck = '‚úÖ';
        if ($grade['CustomerGrade'] === 'A' && $grade['min_purchase'] < 10000) $logicCheck = '‚ùå';
        elseif ($grade['CustomerGrade'] === 'B' && ($grade['min_purchase'] < 5000 || $grade['max_purchase'] >= 10000)) $logicCheck = '‚ùå';
        elseif ($grade['CustomerGrade'] === 'C' && ($grade['min_purchase'] < 2000 || $grade['max_purchase'] >= 5000)) $logicCheck = '‚ùå';
        elseif ($grade['CustomerGrade'] === 'D' && $grade['max_purchase'] >= 2000) $logicCheck = '‚ùå';
        
        echo "<tr>\n";
        echo "<td><strong>{$grade['CustomerGrade']}</strong></td>\n";
        echo "<td>{$grade['count']}</td>\n";
        echo "<td>‡∏ø" . number_format($grade['min_purchase'], 2) . "</td>\n";
        echo "<td>‡∏ø" . number_format($grade['max_purchase'], 2) . "</td>\n";
        echo "<td>‡∏ø" . number_format($grade['avg_purchase'], 2) . "</td>\n";
        echo "<td>{$logicCheck}</td>\n";
        echo "</tr>\n";
    }
    echo "</table>\n";
    
    // 7. Grade A Customers
    echo "<h3>7. Grade A Customers</h3>\n";
    
    $gradeASql = "SELECT CustomerCode, CustomerName, TotalPurchase, GradeCalculatedDate
                  FROM customers 
                  WHERE CustomerGrade = 'A' 
                  ORDER BY TotalPurchase DESC 
                  LIMIT 10";
    
    $gradeAStmt = $pdo->prepare($gradeASql);
    $gradeAStmt->execute();
    $gradeACustomers = $gradeAStmt->fetchAll(PDO::FETCH_ASSOC);
    
    if ($gradeACustomers) {
        echo "<table border='1' style='border-collapse: collapse; margin: 10px 0;'>\n";
        echo "<tr><th>CustomerCode</th><th>CustomerName</th><th>TotalPurchase</th><th>GradeCalculatedDate</th></tr>\n";
        
        foreach ($gradeACustomers as $customer) {
            $highlight = ($customer['CustomerCode'] === 'CUST003') ? 'style="background-color: #ffeb3b; font-weight: bold;"' : '';
            echo "<tr {$highlight}>\n";
            echo "<td>{$customer['CustomerCode']}</td>\n";
            echo "<td>{$customer['CustomerName']}</td>\n";
            echo "<td>‡∏ø" . number_format($customer['TotalPurchase'], 2) . "</td>\n";
            echo "<td>{$customer['GradeCalculatedDate']}</td>\n";
            echo "</tr>\n";
        }
        echo "</table>\n";
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö CUST003
        $cust003InGradeA = false;
        foreach ($gradeACustomers as $customer) {
            if ($customer['CustomerCode'] === 'CUST003') {
                $cust003InGradeA = true;
                break;
            }
        }
        
        if ($cust003InGradeA) {
            echo "<div style='background: #d4edda; padding: 15px; border-radius: 5px; margin: 10px 0;'>\n";
            echo "<p><strong>üéâ PERFECT!</strong> CUST003 ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Grade A customers ‡πÅ‡∏•‡πâ‡∏ß!</p>\n";
            echo "</div>\n";
        }
    } else {
        echo "<p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ Grade A</p>\n";
    }
    
    echo "<hr>\n";
    echo "<h3>‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô</h3>\n";
    echo "<p><strong>‡∏™‡∏£‡∏∏‡∏õ:</strong> ‡πÉ‡∏ä‡πâ SUM(Price) ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ Price = ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß</p>\n";
    echo "<div style='margin: 20px 0;'>\n";
    echo "<a href='pages/customer_detail.php?code=CUST003' style='background: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; margin: 5px;'>üë§ ‡∏î‡∏π CUST003</a>\n";
    echo "<a href='pages/customer_intelligence.php' style='background: #28a745; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; margin: 5px;'>üìä Customer Intelligence</a>\n";
    echo "<a href='test_customer_intelligence_fixes.php' style='background: #ffc107; color: black; padding: 10px 20px; text-decoration: none; border-radius: 5px; margin: 5px;'>üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö</a>\n";
    echo "</div>\n";
    
} catch (Exception $e) {
    echo "<p style='color: red; font-size: 1.2em;'>‚ùå Error: " . $e->getMessage() . "</p>\n";
    echo "<p>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á</p>\n";
}
?>